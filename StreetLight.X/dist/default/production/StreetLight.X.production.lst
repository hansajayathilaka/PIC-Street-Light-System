

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jan 19 00:25:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 22/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     0091                     	;# 
   169     0092                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     010E                     	;# 
   181     010F                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186     047B                     __pidataBANK0:
   187                           
   188                           ;initializer for _led
   189     047B  3406               	retlw	6
   190     047C  3400               	retlw	0
   191     047D  3400               	retlw	0
   192     047E  3400               	retlw	0
   193     047F  3406               	retlw	6
   194     0480  3400               	retlw	0
   195     0481  3401               	retlw	1
   196     0482  3400               	retlw	0
   197     0483  3406               	retlw	6
   198     0484  3400               	retlw	0
   199     0485  3402               	retlw	2
   200     0486  3400               	retlw	0
   201     0487  3406               	retlw	6
   202     0488  3400               	retlw	0
   203     0489  3403               	retlw	3
   204     048A  3400               	retlw	0
   205     048B  3406               	retlw	6
   206     048C  3400               	retlw	0
   207     048D  3404               	retlw	4
   208     048E  3400               	retlw	0
   209     048F  3406               	retlw	6
   210     0490  3400               	retlw	0
   211     0491  3405               	retlw	5
   212     0492  3400               	retlw	0
   213     0493  3406               	retlw	6
   214     0494  3400               	retlw	0
   215     0495  3406               	retlw	6
   216     0496  3400               	retlw	0
   217     0497  3406               	retlw	6
   218     0498  3400               	retlw	0
   219     0499  3407               	retlw	7
   220     049A  3400               	retlw	0
   221                           
   222                           ;initializer for _s
   223     049B  3405               	retlw	5
   224     049C  3400               	retlw	0
   225     049D  3400               	retlw	0
   226     049E  3400               	retlw	0
   227     049F  3405               	retlw	5
   228     04A0  3400               	retlw	0
   229     04A1  3401               	retlw	1
   230     04A2  3400               	retlw	0
   231     04A3  3405               	retlw	5
   232     04A4  3400               	retlw	0
   233     04A5  3402               	retlw	2
   234     04A6  3400               	retlw	0
   235     04A7  3405               	retlw	5
   236     04A8  3400               	retlw	0
   237     04A9  3403               	retlw	3
   238     04AA  3400               	retlw	0
   239     04AB  3405               	retlw	5
   240     04AC  3400               	retlw	0
   241     04AD  3404               	retlw	4
   242     04AE  3400               	retlw	0
   243     04AF  3405               	retlw	5
   244     04B0  3400               	retlw	0
   245     04B1  3405               	retlw	5
   246     04B2  3400               	retlw	0
   247     04B3  3409               	retlw	9
   248     04B4  3400               	retlw	0
   249     04B5  3400               	retlw	0
   250     04B6  3400               	retlw	0
   251     04B7  3409               	retlw	9
   252     04B8  3400               	retlw	0
   253     04B9  3401               	retlw	1
   254     04BA  3400               	retlw	0
   255     001A                     _RCREG	set	26
   256     0019                     _TXREG	set	25
   257     0018                     _RCSTA	set	24
   258     001E                     _ADRESH	set	30
   259     001F                     _ADCON0bits	set	31
   260     001F                     _ADCON0	set	31
   261     0006                     _PORTB	set	6
   262     0009                     _PORTE	set	9
   263     0005                     _PORTA	set	5
   264     0038                     _RC0	set	56
   265     0064                     _TXIF	set	100
   266     0065                     _RCIF	set	101
   267     00FA                     _GO_DONE	set	250
   268     003F                     _RC7	set	63
   269     003E                     _RC6	set	62
   270     0047                     _RD7	set	71
   271     0046                     _RD6	set	70
   272     0045                     _RD5	set	69
   273     0044                     _RD4	set	68
   274     0086                     _TRISB	set	134
   275     0085                     _TRISA	set	133
   276     0099                     _SPBRG	set	153
   277     0098                     _TXSTA	set	152
   278     009E                     _ADRESL	set	158
   279     009F                     _ADCON1	set	159
   280     0088                     _TRISD	set	136
   281     0438                     _TRISC0	set	1080
   282     043F                     _TRISC7	set	1087
   283     043E                     _TRISC6	set	1086
   284                           
   285                           	psect	strings
   286     0003                     __pstrings:
   287     0003                     stringtab:
   288     0003                     __stringtab:
   289                           
   290                           ;	String table - string pointers are 1 byte each
   291     0003  1BFF               	btfsc	btemp+1,7
   292     0004  280D               	ljmp	stringcode
   293     0005  1383               	bcf	3,7
   294     0006  187F               	btfsc	btemp+1,0
   295     0007  1783               	bsf	3,7
   296     0008  0800               	movf	0,w
   297     0009  0A84               	incf	4,f
   298     000A  1903               	skipnz
   299     000B  0AFF               	incf	btemp+1,f
   300     000C  0008               	return
   301     000D                     stringcode:
   302     000D                     stringdir:
   303     000D  3000               	movlw	high stringdir
   304     000E  008A               	movwf	10
   305     000F  0804               	movf	4,w
   306     0010  0A84               	incf	4,f
   307     0011  0782               	addwf	2,f
   308     0012                     __stringbase:
   309     0012  3400               	retlw	0
   310     0013                     __end_of__stringtab:
   311     0013                     STR_2:
   312     0013  3457               	retlw	87	;'W'
   313     0014  3465               	retlw	101	;'e'
   314     0015  346C               	retlw	108	;'l'
   315     0016  3463               	retlw	99	;'c'
   316     0017  346F               	retlw	111	;'o'
   317     0018  346D               	retlw	109	;'m'
   318     0019  3465               	retlw	101	;'e'
   319     001A  3420               	retlw	32	;' '
   320     001B  3474               	retlw	116	;'t'
   321     001C  346F               	retlw	111	;'o'
   322     001D  3420               	retlw	32	;' '
   323     001E  344C               	retlw	76	;'L'
   324     001F  3469               	retlw	105	;'i'
   325     0020  3467               	retlw	103	;'g'
   326     0021  3468               	retlw	104	;'h'
   327     0022  3474               	retlw	116	;'t'
   328     0023  3400               	retlw	0
   329     0024                     STR_4:
   330     0024  3449               	retlw	73	;'I'
   331     0025  346E               	retlw	110	;'n'
   332     0026  3476               	retlw	118	;'v'
   333     0027  3461               	retlw	97	;'a'
   334     0028  346C               	retlw	108	;'l'
   335     0029  3469               	retlw	105	;'i'
   336     002A  3464               	retlw	100	;'d'
   337     002B  3420               	retlw	32	;' '
   338     002C  3453               	retlw	83	;'S'
   339     002D  3465               	retlw	101	;'e'
   340     002E  3472               	retlw	114	;'r'
   341     002F  3469               	retlw	105	;'i'
   342     0030  3461               	retlw	97	;'a'
   343     0031  346C               	retlw	108	;'l'
   344     0032  3420               	retlw	32	;' '
   345     0033  3400               	retlw	0
   346     0034                     STR_3:
   347     0034  3450               	retlw	80	;'P'
   348     0035  346F               	retlw	111	;'o'
   349     0036  3477               	retlw	119	;'w'
   350     0037  3465               	retlw	101	;'e'
   351     0038  3472               	retlw	114	;'r'
   352     0039  3465               	retlw	101	;'e'
   353     003A  3464               	retlw	100	;'d'
   354     003B  3420               	retlw	32	;' '
   355     003C  3462               	retlw	98	;'b'
   356     003D  3479               	retlw	121	;'y'
   357     003E  3420               	retlw	32	;' '
   358     003F  3453               	retlw	83	;'S'
   359     0040  344C               	retlw	76	;'L'
   360     0041  3454               	retlw	84	;'T'
   361     0042  3443               	retlw	67	;'C'
   362     0043  3400               	retlw	0
   363     0044                     STR_1:
   364     0044  3425               	retlw	37	;'%'
   365     0045  3464               	retlw	100	;'d'
   366     0046  3400               	retlw	0
   367                           
   368                           	psect	cinit
   369     07EE                     start_initialization:	
   370                           ; #config settings
   371                           
   372     07EE                     __initialization:
   373                           
   374                           ; Initialize objects allocated to BANK0
   375     07EE  1383               	bcf	3,7	;select IRP bank0
   376     07EF  3060               	movlw	low (__pdataBANK0+64)
   377     07F0  00FD               	movwf	btemp+-1
   378     07F1  3004               	movlw	high __pidataBANK0
   379     07F2  00FE               	movwf	btemp
   380     07F3  307B               	movlw	low __pidataBANK0
   381     07F4  00FF               	movwf	btemp+1
   382     07F5  3020               	movlw	low __pdataBANK0
   383     07F6  0084               	movwf	4
   384     07F7  120A  118A  23C1  120A  118A  	fcall	init_ram0
   385     07FC                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388     07FC                     __end_of__initialization:
   389     07FC  0183               	clrf	3
   390     07FD  120A  118A  2E06   	ljmp	_main	;jump to C main() function
   391                           
   392                           	psect	dataBANK0
   393     0020                     __pdataBANK0:
   394     0020                     _led:
   395     0020                     	ds	32
   396     0040                     _s:
   397     0040                     	ds	32
   398                           
   399                           	psect	inittext
   400     03BD                     init_fetch0:	
   401                           ;	Called with low address in FSR and high address in W
   402                           
   403     03BD  087E               	movf	btemp,w
   404     03BE  008A               	movwf	10
   405     03BF  087F               	movf	btemp+1,w
   406     03C0  0082               	movwf	2
   407     03C1                     init_ram0:	
   408                           ;Called with:
   409                           ;	high address of idata address in btemp 
   410                           ;	low address of idata address in btemp+1 
   411                           ;	low address of data in FSR
   412                           ;	high address + 1 of data in btemp-1
   413                           
   414     03C1  120A  118A  23BD  120A  118A  	fcall	init_fetch0
   415     03C6  0080               	movwf	0
   416     03C7  0A84               	incf	4,f
   417     03C8  0804               	movf	4,w
   418     03C9  067D               	xorwf	btemp+-1,w
   419     03CA  1903               	btfsc	3,2
   420     03CB  3400               	retlw	0
   421     03CC  0AFF               	incf	btemp+1,f
   422     03CD  1903               	btfsc	3,2
   423     03CE  0AFE               	incf	btemp,f
   424     03CF  2BC1               	goto	init_ram0
   425                           
   426                           	psect	cstackCOMMON
   427     0070                     __pcstackCOMMON:
   428     0070                     ?_automaticLights:
   429     0070                     ?_manualLights:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_Lcd_Port:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ??_Lcd_Port:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_Lcd_Cmd:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_Lcd_Clear:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_Lcd_Init:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_Lcd_Write_Char:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_ADC_Init:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_ADC_Init:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_usart_init:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ??_usart_init:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_ser_int:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ??_ser_int:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ?_rx_val:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ??_rx_val:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ?_main:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?_ADC_Read:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ?_rx_ready:	
   481                           ; 2 bytes @ 0x0
   482                           
   483     0070                     Lcd_Port@a:	
   484                           ; 2 bytes @ 0x0
   485                           
   486     0070                     ADC_Read@ANC:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     manualLights@state:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 2 bytes @ 0x0
   494     0070                     	ds	1
   495     0071                     ??_Lcd_Cmd:
   496     0071                     ??_Lcd_Write_Char:	
   497                           ; 1 bytes @ 0x1
   498                           
   499                           
   500                           ; 1 bytes @ 0x1
   501     0071                     	ds	1
   502     0072                     ??_manualLights:
   503     0072                     ??_ADC_Read:	
   504                           ; 1 bytes @ 0x2
   505                           
   506     0072                     ??_rx_ready:	
   507                           ; 1 bytes @ 0x2
   508                           
   509     0072                     Lcd_Write_Char@temp:	
   510                           ; 1 bytes @ 0x2
   511                           
   512                           
   513                           ; 1 bytes @ 0x2
   514     0072                     	ds	1
   515     0073                     ??_automaticLights:
   516     0073                     Lcd_Cmd@a:	
   517                           ; 1 bytes @ 0x3
   518                           
   519     0073                     Lcd_Write_Char@y:	
   520                           ; 1 bytes @ 0x3
   521                           
   522                           
   523                           ; 1 bytes @ 0x3
   524     0073                     	ds	1
   525     0074                     ??_Lcd_Clear:
   526     0074                     ?_Lcd_Set_Cursor:	
   527                           ; 1 bytes @ 0x4
   528                           
   529     0074                     ??_Lcd_Init:	
   530                           ; 1 bytes @ 0x4
   531                           
   532     0074                     Lcd_Set_Cursor@b:	
   533                           ; 1 bytes @ 0x4
   534                           
   535     0074                     Lcd_Write_Char@a:	
   536                           ; 1 bytes @ 0x4
   537                           
   538                           
   539                           ; 1 bytes @ 0x4
   540     0074                     	ds	1
   541     0075                     ??_Lcd_Set_Cursor:
   542     0075                     ?_Lcd_Write_String:	
   543                           ; 1 bytes @ 0x5
   544                           
   545     0075                     Lcd_Write_String@a:	
   546                           ; 1 bytes @ 0x5
   547                           
   548     0075                     manualLights@i:	
   549                           ; 2 bytes @ 0x5
   550                           
   551                           
   552                           ; 2 bytes @ 0x5
   553     0075                     	ds	1
   554     0076                     Lcd_Set_Cursor@a:
   555                           
   556                           ; 1 bytes @ 0x6
   557     0076                     	ds	1
   558     0077                     ??_Lcd_Write_String:
   559     0077                     Lcd_Set_Cursor@z:	
   560                           ; 1 bytes @ 0x7
   561                           
   562     0077                     manualLights@i_197:	
   563                           ; 1 bytes @ 0x7
   564                           
   565                           
   566                           ; 2 bytes @ 0x7
   567     0077                     	ds	1
   568     0078                     Lcd_Set_Cursor@y:
   569                           
   570                           ; 1 bytes @ 0x8
   571     0078                     	ds	1
   572     0079                     Lcd_Set_Cursor@temp:
   573                           
   574                           ; 1 bytes @ 0x9
   575     0079                     	ds	1
   576     007A                     Lcd_Write_String@i:
   577                           
   578                           ; 2 bytes @ 0xA
   579     007A                     	ds	2
   580     007C                     main@blu_val:
   581                           
   582                           ; 1 bytes @ 0xC
   583     007C                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586     0060                     __pcstackBANK0:
   587     0060                     automaticLights@val:
   588                           
   589                           ; 2 bytes @ 0x0
   590     0060                     	ds	2
   591     0062                     automaticLights@i:
   592                           
   593                           ; 2 bytes @ 0x2
   594     0062                     	ds	2
   595     0064                     automaticLights@j:
   596                           
   597                           ; 2 bytes @ 0x4
   598     0064                     	ds	2
   599     0066                     automaticLights@j_193:
   600                           
   601                           ; 2 bytes @ 0x6
   602     0066                     	ds	2
   603     0068                     automaticLights@i_189:
   604                           
   605                           ; 2 bytes @ 0x8
   606     0068                     	ds	2
   607     006A                     ??_main:
   608                           
   609                           ; 1 bytes @ 0xA
   610     006A                     	ds	3
   611                           
   612                           	psect	maintext
   613     0606                     __pmaintext:	
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 51 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  a               2    0        unsigned int 
   624 ;;  blu_val         1   12[COMMON] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : B00/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         1       0       0       0       0
   636 ;;      Temps:          0       3       0       0       0
   637 ;;      Totals:         1       3       0       0       0
   638 ;;Total ram usage:        4 bytes
   639 ;; Hardware stack levels required when called: 3
   640 ;; This function calls:
   641 ;;		_ADC_Init
   642 ;;		_Lcd_Clear
   643 ;;		_Lcd_Init
   644 ;;		_Lcd_Set_Cursor
   645 ;;		_Lcd_Write_Char
   646 ;;		_Lcd_Write_String
   647 ;;		_automaticLights
   648 ;;		_manualLights
   649 ;;		_rx_ready
   650 ;;		_rx_val
   651 ;;		_ser_int
   652 ;;		_usart_init
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     0606                     _main:	
   659                           ;psect for function _main
   660                           
   661     0606                     l1217:	
   662                           ;incstack = 0
   663                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   664                           
   665                           
   666                           ;main.c: 52:     unsigned int a;;main.c: 55:     TRISD = 0x00;
   667     0606  1683               	bsf	3,5	;RP0=1, select bank1
   668     0607  1303               	bcf	3,6	;RP1=0, select bank1
   669     0608  0188               	clrf	8	;volatile
   670     0609                     l1219:
   671                           
   672                           ;main.c: 56:     TRISC6 = 0;
   673     0609  1307               	bcf	7,6	;volatile
   674     060A                     l1221:
   675                           
   676                           ;main.c: 57:     TRISC7 = 0;
   677     060A  1387               	bcf	7,7	;volatile
   678     060B                     l1223:
   679                           
   680                           ;main.c: 59:     usart_init();
   681     060B  120A  118A  238F  120A  118A  	fcall	_usart_init
   682     0610                     l1225:
   683                           
   684                           ;main.c: 60:     ser_int();
   685     0610  120A  118A  23AC  120A  118A  	fcall	_ser_int
   686     0615                     l1227:
   687                           
   688                           ;main.c: 62:     Lcd_Init();
   689     0615  120A  118A  2543  120A  118A  	fcall	_Lcd_Init
   690     061A                     l1229:
   691                           
   692                           ;main.c: 63:     Lcd_Clear();
   693     061A  120A  118A  2382  120A  118A  	fcall	_Lcd_Clear
   694     061F                     l1231:
   695                           
   696                           ;main.c: 64:     Lcd_Set_Cursor(1,1);
   697     061F  01F4               	clrf	Lcd_Set_Cursor@b
   698     0620  0AF4               	incf	Lcd_Set_Cursor@b,f
   699     0621  3001               	movlw	1
   700     0622  120A  118A  24FD  120A  118A  	fcall	_Lcd_Set_Cursor
   701     0627                     l1233:
   702                           
   703                           ;main.c: 65:     Lcd_Write_String("Welcome to Light");
   704     0627  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   705     0628  00F5               	movwf	Lcd_Write_String@a
   706     0629  3080               	movlw	128
   707     062A  00F6               	movwf	Lcd_Write_String@a+1
   708     062B  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   709     0630                     l1235:
   710                           
   711                           ;main.c: 66:     Lcd_Set_Cursor(2,1);
   712     0630  01F4               	clrf	Lcd_Set_Cursor@b
   713     0631  0AF4               	incf	Lcd_Set_Cursor@b,f
   714     0632  3002               	movlw	2
   715     0633  120A  118A  24FD  120A  118A  	fcall	_Lcd_Set_Cursor
   716     0638                     l1237:
   717                           
   718                           ;main.c: 67:     Lcd_Write_String("Powered by SLTC");
   719     0638  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   720     0639  00F5               	movwf	Lcd_Write_String@a
   721     063A  3080               	movlw	128
   722     063B  00F6               	movwf	Lcd_Write_String@a+1
   723     063C  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   724     0641                     l1239:
   725                           
   726                           ;main.c: 68:     _delay((unsigned long)((3000)*(8000000/4000.0)));
   727     0641  301F               	movlw	31
   728     0642  1283               	bcf	3,5	;RP0=0, select bank0
   729     0643  1303               	bcf	3,6	;RP1=0, select bank0
   730     0644  00EC               	movwf	??_main+2
   731     0645  3071               	movlw	113
   732     0646  00EB               	movwf	??_main+1
   733     0647  301D               	movlw	29
   734     0648  00EA               	movwf	??_main
   735     0649                     u757:
   736     0649  0BEA               	decfsz	??_main,f
   737     064A  2E49               	goto	u757
   738     064B  0BEB               	decfsz	??_main+1,f
   739     064C  2E49               	goto	u757
   740     064D  0BEC               	decfsz	??_main+2,f
   741     064E  2E49               	goto	u757
   742     064F  2E50               	nop2
   743     0650                     l1241:
   744                           
   745                           ;main.c: 70:     ADC_Init();
   746     0650  120A  118A  2379  120A  118A  	fcall	_ADC_Init
   747     0655                     l1243:
   748                           
   749                           ;main.c: 72:     TRISA = 0xff;
   750     0655  30FF               	movlw	255
   751     0656  1683               	bsf	3,5	;RP0=1, select bank1
   752     0657  1303               	bcf	3,6	;RP1=0, select bank1
   753     0658  0085               	movwf	5	;volatile
   754     0659                     l1245:
   755                           
   756                           ;main.c: 73:     TRISB = 0x00;
   757     0659  0186               	clrf	6	;volatile
   758     065A                     l1247:
   759                           
   760                           ;main.c: 74:     TRISC0 = 0;
   761     065A  1007               	bcf	7,0	;volatile
   762     065B                     l1249:
   763                           
   764                           ;main.c: 76:     PORTB = 0x00;
   765     065B  1283               	bcf	3,5	;RP0=0, select bank0
   766     065C  1303               	bcf	3,6	;RP1=0, select bank0
   767     065D  0186               	clrf	6	;volatile
   768     065E                     l1251:
   769                           
   770                           ;main.c: 77:     RC0 = 0;
   771     065E  1007               	bcf	7,0	;volatile
   772     065F                     l1253:
   773                           
   774                           ;main.c: 79:     unsigned char blu_val = 'A';
   775     065F  3041               	movlw	65
   776     0660  00FC               	movwf	main@blu_val
   777     0661                     l1255:
   778                           
   779                           ;main.c: 82:     {;main.c: 83:         if (rx_ready()) {
   780     0661  120A  118A  239D  120A  118A  	fcall	_rx_ready
   781     0666  0870               	movf	?_rx_ready,w
   782     0667  0471               	iorwf	?_rx_ready+1,w
   783     0668  1903               	btfsc	3,2
   784     0669  2E6B               	goto	u741
   785     066A  2E6C               	goto	u740
   786     066B                     u741:
   787     066B  2EA4               	goto	l1271
   788     066C                     u740:
   789     066C                     l1257:
   790                           
   791                           ;main.c: 84:             blu_val = rx_val();
   792     066C  120A  118A  2375  120A  118A  	fcall	_rx_val
   793     0671  00FC               	movwf	main@blu_val
   794     0672  2EA4               	goto	l1271
   795     0673                     l1259:
   796                           
   797                           ;main.c: 89:                 automaticLights();
   798     0673  120A  118A  26C8  120A  118A  	fcall	_automaticLights
   799                           
   800                           ;main.c: 90:                 break;
   801     0678  2EB9               	goto	l1273
   802     0679                     l1261:
   803                           
   804                           ;main.c: 92:                 manualLights(1);
   805     0679  3001               	movlw	1
   806     067A  00F0               	movwf	manualLights@state
   807     067B  3000               	movlw	0
   808     067C  00F1               	movwf	manualLights@state+1
   809     067D  120A  118A  25A3  120A  118A  	fcall	_manualLights
   810                           
   811                           ;main.c: 93:                 break;
   812     0682  2EB9               	goto	l1273
   813     0683                     l1263:
   814                           
   815                           ;main.c: 95:                 manualLights(0);
   816     0683  3000               	movlw	0
   817     0684  00F0               	movwf	manualLights@state
   818     0685  00F1               	movwf	manualLights@state+1
   819     0686  120A  118A  25A3  120A  118A  	fcall	_manualLights
   820                           
   821                           ;main.c: 96:                 break;
   822     068B  2EB9               	goto	l1273
   823     068C                     l1265:
   824                           
   825                           ;main.c: 98:                 Lcd_Set_Cursor(2,1);
   826     068C  01F4               	clrf	Lcd_Set_Cursor@b
   827     068D  0AF4               	incf	Lcd_Set_Cursor@b,f
   828     068E  3002               	movlw	2
   829     068F  120A  118A  24FD  120A  118A  	fcall	_Lcd_Set_Cursor
   830     0694                     l1267:
   831                           
   832                           ;main.c: 99:                 Lcd_Write_String("Invalid Serial ");
   833     0694  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   834     0695  00F5               	movwf	Lcd_Write_String@a
   835     0696  3080               	movlw	128
   836     0697  00F6               	movwf	Lcd_Write_String@a+1
   837     0698  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   838     069D                     l1269:
   839                           
   840                           ;main.c: 100:                 Lcd_Write_Char(blu_val);
   841     069D  087C               	movf	main@blu_val,w
   842     069E  120A  118A  240C  120A  118A  	fcall	_Lcd_Write_Char
   843                           
   844                           ;main.c: 102:         }
   845     06A3  2EB9               	goto	l1273
   846     06A4                     l1271:
   847     06A4  087C               	movf	main@blu_val,w
   848     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   849     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   850     06A7  00EA               	movwf	??_main
   851     06A8  01EB               	clrf	??_main+1
   852                           
   853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   854                           ; Switch size 1, requested type "simple"
   855                           ; Number of cases is 1, Range of values is 0 to 0
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte            4     3 (average)
   859                           ; direct_byte           11     8 (fixed)
   860                           ; jumptable            260     6 (fixed)
   861                           ;	Chosen strategy is simple_byte
   862     06A9  086B               	movf	??_main+1,w
   863     06AA  3A00               	xorlw	0	; case 0
   864     06AB  1903               	skipnz
   865     06AC  2EAE               	goto	l1311
   866     06AD  2E8C               	goto	l1265
   867     06AE                     l1311:
   868                           
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 3, Range of values is 65 to 79
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte           10     6 (average)
   874                           ; direct_byte           56    11 (fixed)
   875                           ; jumptable            263     9 (fixed)
   876                           ;	Chosen strategy is simple_byte
   877     06AE  086A               	movf	??_main,w
   878     06AF  3A41               	xorlw	65	; case 65
   879     06B0  1903               	skipnz
   880     06B1  2E73               	goto	l1259
   881     06B2  3A07               	xorlw	7	; case 70
   882     06B3  1903               	skipnz
   883     06B4  2E83               	goto	l1263
   884     06B5  3A09               	xorlw	9	; case 79
   885     06B6  1903               	skipnz
   886     06B7  2E79               	goto	l1261
   887     06B8  2E8C               	goto	l1265
   888     06B9                     l1273:
   889                           
   890                           ;main.c: 104:         _delay((unsigned long)((10)*(8000000/4000.0)));
   891     06B9  301A               	movlw	26
   892     06BA  1283               	bcf	3,5	;RP0=0, select bank0
   893     06BB  1303               	bcf	3,6	;RP1=0, select bank0
   894     06BC  00EB               	movwf	??_main+1
   895     06BD  30F7               	movlw	247
   896     06BE  00EA               	movwf	??_main
   897     06BF                     u767:
   898     06BF  0BEA               	decfsz	??_main,f
   899     06C0  2EBF               	goto	u767
   900     06C1  0BEB               	decfsz	??_main+1,f
   901     06C2  2EBF               	goto	u767
   902     06C3  2EC4               	nop2
   903     06C4  2E61               	goto	l1255
   904     06C5  120A  118A  2800   	ljmp	start
   905     06C8                     __end_of_main:
   906                           
   907                           	psect	text1
   908     038F                     __ptext1:	
   909 ;; *************** function _usart_init *****************
   910 ;; Defined at:
   911 ;;		line 6 in file "./usart.h"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		None
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938     038F                     _usart_init:	
   939                           ;psect for function _usart_init
   940                           
   941     038F                     l871:	
   942                           ;incstack = 0
   943                           ; Regs used in _usart_init: []
   944                           
   945                           
   946                           ;./usart.h: 8:     TRISC6=TRISC7=1;
   947     038F  1683               	bsf	3,5	;RP0=1, select bank1
   948     0390  1303               	bcf	3,6	;RP1=0, select bank1
   949     0391  1787               	bsf	7,7	;volatile
   950     0392  1B87               	btfsc	7,7	;volatile
   951     0393  2B95               	goto	u171
   952     0394  2B99               	goto	u170
   953     0395                     u171:
   954     0395  1683               	bsf	3,5	;RP0=1, select bank1
   955     0396  1303               	bcf	3,6	;RP1=0, select bank1
   956     0397  1707               	bsf	7,6	;volatile
   957     0398  2B9C               	goto	u184
   958     0399                     u170:
   959     0399  1683               	bsf	3,5	;RP0=1, select bank1
   960     039A  1303               	bcf	3,6	;RP1=0, select bank1
   961     039B  1307               	bcf	7,6	;volatile
   962     039C                     u184:
   963     039C                     l131:
   964     039C  0008               	return
   965     039D                     __end_of_usart_init:
   966                           
   967                           	psect	text2
   968     03AC                     __ptext2:	
   969 ;; *************** function _ser_int *****************
   970 ;; Defined at:
   971 ;;		line 20 in file "./usart.h"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998     03AC                     _ser_int:	
   999                           ;psect for function _ser_int
  1000                           
  1001     03AC                     l887:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _ser_int: [wreg]
  1004                           
  1005                           
  1006                           ;./usart.h: 22:     TXSTA=0x20;
  1007     03AC  3020               	movlw	32
  1008     03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1009     03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1010     03AF  0098               	movwf	24	;volatile
  1011                           
  1012                           ;./usart.h: 23:     RCSTA=0b10010000;
  1013     03B0  3090               	movlw	144
  1014     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1015     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1016     03B3  0098               	movwf	24	;volatile
  1017                           
  1018                           ;./usart.h: 24:     SPBRG=17;
  1019     03B4  3011               	movlw	17
  1020     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  1021     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  1022     03B7  0099               	movwf	25	;volatile
  1023     03B8                     l889:
  1024                           
  1025                           ;./usart.h: 25:     TXIF=RCIF=0;
  1026     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1027     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1028     03BA  128C               	bcf	12,5	;volatile
  1029     03BB  120C               	bcf	12,4	;volatile
  1030     03BC                     l139:
  1031     03BC  0008               	return
  1032     03BD                     __end_of_ser_int:
  1033                           
  1034                           	psect	text3
  1035     0375                     __ptext3:	
  1036 ;; *************** function _rx_val *****************
  1037 ;; Defined at:
  1038 ;;		line 42 in file "./usart.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      unsigned char 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     0375                     _rx_val:	
  1066                           ;psect for function _rx_val
  1067                           
  1068     0375                     l891:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _rx_val: [wreg]
  1071                           
  1072                           
  1073                           ;./usart.h: 44:     return RCREG;
  1074     0375  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0376  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0377  081A               	movf	26,w	;volatile
  1077     0378                     l154:
  1078     0378  0008               	return
  1079     0379                     __end_of_rx_val:
  1080                           
  1081                           	psect	text4
  1082     039D                     __ptext4:	
  1083 ;; *************** function _rx_ready *****************
  1084 ;; Defined at:
  1085 ;;		line 11 in file "./usart.h"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2    0[COMMON] int 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         2       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         2       0       0       0       0
  1103 ;;Total ram usage:        2 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     039D                     _rx_ready:	
  1113                           ;psect for function _rx_ready
  1114                           
  1115     039D                     l1127:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _rx_ready: [wreg+status,2]
  1118                           
  1119                           
  1120                           ;./usart.h: 12:     if (RCIF) {
  1121     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1122     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1123     039F  1E8C               	btfss	12,5	;volatile
  1124     03A0  2BA2               	goto	u541
  1125     03A1  2BA3               	goto	u540
  1126     03A2                     u541:
  1127     03A2  2BA9               	goto	l1137
  1128     03A3                     u540:
  1129     03A3                     l1129:
  1130                           
  1131                           ;./usart.h: 13:         RCIF = 0;
  1132     03A3  128C               	bcf	12,5	;volatile
  1133     03A4                     l1131:
  1134                           
  1135                           ;./usart.h: 14:         return 1;
  1136     03A4  3001               	movlw	1
  1137     03A5  00F0               	movwf	?_rx_ready
  1138     03A6  3000               	movlw	0
  1139     03A7  00F1               	movwf	?_rx_ready+1
  1140     03A8  2BAB               	goto	l135
  1141     03A9                     l1137:
  1142                           
  1143                           ;./usart.h: 16:         return 0;
  1144     03A9  01F0               	clrf	?_rx_ready
  1145     03AA  01F1               	clrf	?_rx_ready+1
  1146     03AB                     l135:
  1147     03AB  0008               	return
  1148     03AC                     __end_of_rx_ready:
  1149                           
  1150                           	psect	text5
  1151     05A3                     __ptext5:	
  1152 ;; *************** function _manualLights *****************
  1153 ;; Defined at:
  1154 ;;		line 129 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  state           2    0[COMMON] int 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  i               2    7[COMMON] int 
  1159 ;;  i               2    5[COMMON] int 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         2       0       0       0       0
  1170 ;;      Locals:         4       0       0       0       0
  1171 ;;      Temps:          3       0       0       0       0
  1172 ;;      Totals:         9       0       0       0       0
  1173 ;;Total ram usage:        9 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182     05A3                     _manualLights:	
  1183                           ;psect for function _manualLights
  1184                           
  1185     05A3                     l1187:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _manualLights: [wreg-fsr0h+status,2+status,0+btemp+1]
  1188                           
  1189                           
  1190                           ;main.c: 130:     if (state == 1) {
  1191     05A3  0370               	decf	manualLights@state,w
  1192     05A4  0471               	iorwf	manualLights@state+1,w
  1193     05A5  1D03               	btfss	3,2
  1194     05A6  2DA8               	goto	u691
  1195     05A7  2DA9               	goto	u690
  1196     05A8                     u691:
  1197     05A8  2DD8               	goto	l1201
  1198     05A9                     u690:
  1199     05A9                     l1189:
  1200                           
  1201                           ;main.c: 131:         for(int i = 0; i < 8; i++) {
  1202     05A9  01F5               	clrf	manualLights@i
  1203     05AA  01F6               	clrf	manualLights@i+1
  1204     05AB                     l1195:
  1205                           
  1206                           ;main.c: 132:             *led[i].port = 0xff;
  1207     05AB  0875               	movf	manualLights@i,w
  1208     05AC  00F2               	movwf	??_manualLights
  1209     05AD  3001               	movlw	1
  1210     05AE                     u705:
  1211     05AE  1003               	clrc
  1212     05AF  0DF2               	rlf	??_manualLights,f
  1213     05B0  3EFF               	addlw	-1
  1214     05B1  1D03               	skipz
  1215     05B2  2DAE               	goto	u705
  1216     05B3  1003               	clrc
  1217     05B4  0D72               	rlf	??_manualLights,w
  1218     05B5  3E20               	addlw	(low (_led| 0))& (0+255)
  1219     05B6  0084               	movwf	4
  1220     05B7  1383               	bcf	3,7	;select IRP bank0
  1221     05B8  0800               	movf	0,w
  1222     05B9  00F3               	movwf	??_manualLights+1
  1223     05BA  0A84               	incf	4,f
  1224     05BB  0800               	movf	0,w
  1225     05BC  00F4               	movwf	??_manualLights+2
  1226     05BD  0873               	movf	??_manualLights+1,w
  1227     05BE  0084               	movwf	4
  1228     05BF  1783               	bsf	3,7
  1229     05C0  1C74               	btfss	??_manualLights+2,0
  1230     05C1  1383               	bcf	3,7
  1231     05C2  30FF               	movlw	255
  1232     05C3  0080               	movwf	0
  1233     05C4                     l1197:
  1234                           
  1235                           ;main.c: 133:         }
  1236     05C4  3001               	movlw	1
  1237     05C5  07F5               	addwf	manualLights@i,f
  1238     05C6  1803               	skipnc
  1239     05C7  0AF6               	incf	manualLights@i+1,f
  1240     05C8  3000               	movlw	0
  1241     05C9  07F6               	addwf	manualLights@i+1,f
  1242     05CA                     l1199:
  1243     05CA  0876               	movf	manualLights@i+1,w
  1244     05CB  3A80               	xorlw	128
  1245     05CC  00FF               	movwf	btemp+1
  1246     05CD  3080               	movlw	128
  1247     05CE  027F               	subwf	btemp+1,w
  1248     05CF  1D03               	skipz
  1249     05D0  2DD3               	goto	u715
  1250     05D1  3008               	movlw	8
  1251     05D2  0275               	subwf	manualLights@i,w
  1252     05D3                     u715:
  1253     05D3  1C03               	skipc
  1254     05D4  2DD6               	goto	u711
  1255     05D5  2DD7               	goto	u710
  1256     05D6                     u711:
  1257     05D6  2DAB               	goto	l1195
  1258     05D7                     u710:
  1259     05D7  2E05               	goto	l200
  1260     05D8                     l1201:
  1261                           
  1262                           ;main.c: 135:         for(int i = 0; i < 8; i++) {
  1263     05D8  01F7               	clrf	manualLights@i_197
  1264     05D9  01F8               	clrf	manualLights@i_197+1
  1265     05DA                     l1207:
  1266                           
  1267                           ;main.c: 136:             *led[i].port = 0x00;
  1268     05DA  0877               	movf	manualLights@i_197,w
  1269     05DB  00F2               	movwf	??_manualLights
  1270     05DC  3001               	movlw	1
  1271     05DD                     u725:
  1272     05DD  1003               	clrc
  1273     05DE  0DF2               	rlf	??_manualLights,f
  1274     05DF  3EFF               	addlw	-1
  1275     05E0  1D03               	skipz
  1276     05E1  2DDD               	goto	u725
  1277     05E2  1003               	clrc
  1278     05E3  0D72               	rlf	??_manualLights,w
  1279     05E4  3E20               	addlw	(low (_led| 0))& (0+255)
  1280     05E5  0084               	movwf	4
  1281     05E6  1383               	bcf	3,7	;select IRP bank0
  1282     05E7  0800               	movf	0,w
  1283     05E8  00F3               	movwf	??_manualLights+1
  1284     05E9  0A84               	incf	4,f
  1285     05EA  0800               	movf	0,w
  1286     05EB  00F4               	movwf	??_manualLights+2
  1287     05EC  0873               	movf	??_manualLights+1,w
  1288     05ED  0084               	movwf	4
  1289     05EE  1783               	bsf	3,7
  1290     05EF  1C74               	btfss	??_manualLights+2,0
  1291     05F0  1383               	bcf	3,7
  1292     05F1  0180               	clrf	0
  1293     05F2                     l1209:
  1294                           
  1295                           ;main.c: 137:         }
  1296     05F2  3001               	movlw	1
  1297     05F3  07F7               	addwf	manualLights@i_197,f
  1298     05F4  1803               	skipnc
  1299     05F5  0AF8               	incf	manualLights@i_197+1,f
  1300     05F6  3000               	movlw	0
  1301     05F7  07F8               	addwf	manualLights@i_197+1,f
  1302     05F8                     l1211:
  1303     05F8  0878               	movf	manualLights@i_197+1,w
  1304     05F9  3A80               	xorlw	128
  1305     05FA  00FF               	movwf	btemp+1
  1306     05FB  3080               	movlw	128
  1307     05FC  027F               	subwf	btemp+1,w
  1308     05FD  1D03               	skipz
  1309     05FE  2E01               	goto	u735
  1310     05FF  3008               	movlw	8
  1311     0600  0277               	subwf	manualLights@i_197,w
  1312     0601                     u735:
  1313     0601  1C03               	skipc
  1314     0602  2E04               	goto	u731
  1315     0603  2E05               	goto	u730
  1316     0604                     u731:
  1317     0604  2DDA               	goto	l1207
  1318     0605                     u730:
  1319     0605                     l200:
  1320     0605  0008               	return
  1321     0606                     __end_of_manualLights:
  1322                           
  1323                           	psect	text6
  1324     06C8                     __ptext6:	
  1325 ;; *************** function _automaticLights *****************
  1326 ;; Defined at:
  1327 ;;		line 110 in file "main.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  j               2    6[BANK0 ] int 
  1332 ;;  j               2    4[BANK0 ] int 
  1333 ;;  val             2    0[BANK0 ] int 
  1334 ;;  i               2    8[BANK0 ] int 
  1335 ;;  i               2    2[BANK0 ] int 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0      10       0       0       0
  1347 ;;      Temps:          5       0       0       0       0
  1348 ;;      Totals:         5      10       0       0       0
  1349 ;;Total ram usage:       15 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 1
  1352 ;; This function calls:
  1353 ;;		_ADC_Read
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359     06C8                     _automaticLights:	
  1360                           ;psect for function _automaticLights
  1361                           
  1362     06C8                     l1141:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _automaticLights: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1365                           
  1366                           
  1367                           ;main.c: 111:     for(int i = 0; i < 8; i++) {
  1368     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1369     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1370     06CA  01E2               	clrf	automaticLights@i
  1371     06CB  01E3               	clrf	automaticLights@i+1
  1372     06CC                     l1147:
  1373                           
  1374                           ;main.c: 112:         *led[i].port = 0x00;
  1375     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1376     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1377     06CE  0862               	movf	automaticLights@i,w
  1378     06CF  00F3               	movwf	??_automaticLights
  1379     06D0  3001               	movlw	1
  1380     06D1                     u555:
  1381     06D1  1003               	clrc
  1382     06D2  0DF3               	rlf	??_automaticLights,f
  1383     06D3  3EFF               	addlw	-1
  1384     06D4  1D03               	skipz
  1385     06D5  2ED1               	goto	u555
  1386     06D6  1003               	clrc
  1387     06D7  0D73               	rlf	??_automaticLights,w
  1388     06D8  3E20               	addlw	(low (_led| 0))& (0+255)
  1389     06D9  0084               	movwf	4
  1390     06DA  1383               	bcf	3,7	;select IRP bank0
  1391     06DB  0800               	movf	0,w
  1392     06DC  00F4               	movwf	??_automaticLights+1
  1393     06DD  0A84               	incf	4,f
  1394     06DE  0800               	movf	0,w
  1395     06DF  00F5               	movwf	??_automaticLights+2
  1396     06E0  0874               	movf	??_automaticLights+1,w
  1397     06E1  0084               	movwf	4
  1398     06E2  1783               	bsf	3,7
  1399     06E3  1C75               	btfss	??_automaticLights+2,0
  1400     06E4  1383               	bcf	3,7
  1401     06E5  0180               	clrf	0
  1402     06E6                     l1149:
  1403                           
  1404                           ;main.c: 113:     }
  1405     06E6  3001               	movlw	1
  1406     06E7  07E2               	addwf	automaticLights@i,f
  1407     06E8  1803               	skipnc
  1408     06E9  0AE3               	incf	automaticLights@i+1,f
  1409     06EA  3000               	movlw	0
  1410     06EB  07E3               	addwf	automaticLights@i+1,f
  1411     06EC                     l1151:
  1412     06EC  0863               	movf	automaticLights@i+1,w
  1413     06ED  3A80               	xorlw	128
  1414     06EE  00FF               	movwf	btemp+1
  1415     06EF  3080               	movlw	128
  1416     06F0  027F               	subwf	btemp+1,w
  1417     06F1  1D03               	skipz
  1418     06F2  2EF5               	goto	u565
  1419     06F3  3008               	movlw	8
  1420     06F4  0262               	subwf	automaticLights@i,w
  1421     06F5                     u565:
  1422     06F5  1C03               	skipc
  1423     06F6  2EF8               	goto	u561
  1424     06F7  2EF9               	goto	u560
  1425     06F8                     u561:
  1426     06F8  2ECC               	goto	l1147
  1427     06F9                     u560:
  1428     06F9                     l1153:
  1429                           
  1430                           ;main.c: 115:     for(int i = 0; i < 8; i++) {
  1431     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1432     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1433     06FB  01E8               	clrf	automaticLights@i_189
  1434     06FC  01E9               	clrf	automaticLights@i_189+1
  1435     06FD                     l1159:
  1436                           
  1437                           ;main.c: 116:         int val = ADC_Read(i);
  1438     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1439     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1440     06FF  0869               	movf	automaticLights@i_189+1,w
  1441     0700  00F1               	movwf	ADC_Read@ANC+1
  1442     0701  0868               	movf	automaticLights@i_189,w
  1443     0702  00F0               	movwf	ADC_Read@ANC
  1444     0703  120A  118A  2441  120A  118A  	fcall	_ADC_Read
  1445     0708  0871               	movf	?_ADC_Read+1,w
  1446     0709  1283               	bcf	3,5	;RP0=0, select bank0
  1447     070A  1303               	bcf	3,6	;RP1=0, select bank0
  1448     070B  00E1               	movwf	automaticLights@val+1
  1449     070C  0870               	movf	?_ADC_Read,w
  1450     070D  00E0               	movwf	automaticLights@val
  1451     070E                     l1161:
  1452                           
  1453                           ;main.c: 118:         if(val < 700) {
  1454     070E  0861               	movf	automaticLights@val+1,w
  1455     070F  3A80               	xorlw	128
  1456     0710  00FF               	movwf	btemp+1
  1457     0711  3082               	movlw	130
  1458     0712  027F               	subwf	btemp+1,w
  1459     0713  1D03               	skipz
  1460     0714  2F17               	goto	u575
  1461     0715  30BC               	movlw	188
  1462     0716  0260               	subwf	automaticLights@val,w
  1463     0717                     u575:
  1464     0717  1803               	skipnc
  1465     0718  2F1A               	goto	u571
  1466     0719  2F1B               	goto	u570
  1467     071A                     u571:
  1468     071A  2FD8               	goto	l1183
  1469     071B                     u570:
  1470     071B                     l1163:
  1471                           
  1472                           ;main.c: 119:             for(int j = i; (j <= i + 1) && j < 8; j++) {
  1473     071B  1283               	bcf	3,5	;RP0=0, select bank0
  1474     071C  1303               	bcf	3,6	;RP1=0, select bank0
  1475     071D  0869               	movf	automaticLights@i_189+1,w
  1476     071E  00E5               	movwf	automaticLights@j+1
  1477     071F  0868               	movf	automaticLights@i_189,w
  1478     0720  00E4               	movwf	automaticLights@j
  1479     0721  2F5A               	goto	l1169
  1480     0722                     l1165:
  1481                           
  1482                           ;main.c: 120:                 *led[j].port |= (1 << led[j].pin);
  1483     0722  3001               	movlw	1
  1484     0723  00F3               	movwf	??_automaticLights
  1485     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1486     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1487     0726  0864               	movf	automaticLights@j,w
  1488     0727  00F4               	movwf	??_automaticLights+1
  1489     0728  3001               	movlw	1
  1490     0729                     u585:
  1491     0729  1003               	clrc
  1492     072A  0DF4               	rlf	??_automaticLights+1,f
  1493     072B  3EFF               	addlw	-1
  1494     072C  1D03               	skipz
  1495     072D  2F29               	goto	u585
  1496     072E  1003               	clrc
  1497     072F  0D74               	rlf	??_automaticLights+1,w
  1498     0730  3E22               	addlw	(low ((_led| 0+2)))& (0+255)
  1499     0731  0084               	movwf	4
  1500     0732  1383               	bcf	3,7	;select IRP bank0
  1501     0733  0A00               	incf	0,w
  1502     0734  2F37               	goto	u594
  1503     0735                     u595:
  1504     0735  1003               	clrc
  1505     0736  0DF3               	rlf	??_automaticLights,f
  1506     0737                     u594:
  1507     0737  3EFF               	addlw	-1
  1508     0738  1D03               	skipz
  1509     0739  2F35               	goto	u595
  1510     073A  0873               	movf	??_automaticLights,w
  1511     073B  00FF               	movwf	btemp+1
  1512     073C  0864               	movf	automaticLights@j,w
  1513     073D  00F5               	movwf	??_automaticLights+2
  1514     073E  3001               	movlw	1
  1515     073F                     u605:
  1516     073F  1003               	clrc
  1517     0740  0DF5               	rlf	??_automaticLights+2,f
  1518     0741  3EFF               	addlw	-1
  1519     0742  1D03               	skipz
  1520     0743  2F3F               	goto	u605
  1521     0744  1003               	clrc
  1522     0745  0D75               	rlf	??_automaticLights+2,w
  1523     0746  3E20               	addlw	(low (_led| 0))& (0+255)
  1524     0747  0084               	movwf	4
  1525     0748  0800               	movf	0,w
  1526     0749  00F6               	movwf	??_automaticLights+3
  1527     074A  0A84               	incf	4,f
  1528     074B  0800               	movf	0,w
  1529     074C  00F7               	movwf	??_automaticLights+4
  1530     074D  0876               	movf	??_automaticLights+3,w
  1531     074E  0084               	movwf	4
  1532     074F  1783               	bsf	3,7
  1533     0750  1C77               	btfss	??_automaticLights+4,0
  1534     0751  1383               	bcf	3,7
  1535     0752  087F               	movf	btemp+1,w
  1536     0753  0480               	iorwf	0,f
  1537     0754                     l1167:
  1538                           
  1539                           ;main.c: 121:             }
  1540     0754  3001               	movlw	1
  1541     0755  07E4               	addwf	automaticLights@j,f
  1542     0756  1803               	skipnc
  1543     0757  0AE5               	incf	automaticLights@j+1,f
  1544     0758  3000               	movlw	0
  1545     0759  07E5               	addwf	automaticLights@j+1,f
  1546     075A                     l1169:
  1547     075A  0868               	movf	automaticLights@i_189,w
  1548     075B  3E01               	addlw	1
  1549     075C  00F3               	movwf	??_automaticLights
  1550     075D  0869               	movf	automaticLights@i_189+1,w
  1551     075E  1803               	skipnc
  1552     075F  3E01               	addlw	1
  1553     0760  3E00               	addlw	0
  1554     0761  00F4               	movwf	??_automaticLights+1
  1555     0762  0874               	movf	??_automaticLights+1,w
  1556     0763  3A80               	xorlw	128
  1557     0764  00F5               	movwf	??_automaticLights+2
  1558     0765  0865               	movf	automaticLights@j+1,w
  1559     0766  3A80               	xorlw	128
  1560     0767  0275               	subwf	??_automaticLights+2,w
  1561     0768  1D03               	skipz
  1562     0769  2F6C               	goto	u615
  1563     076A  0864               	movf	automaticLights@j,w
  1564     076B  0273               	subwf	??_automaticLights,w
  1565     076C                     u615:
  1566     076C  1C03               	skipc
  1567     076D  2F6F               	goto	u611
  1568     076E  2F70               	goto	u610
  1569     076F                     u611:
  1570     076F  2F7F               	goto	l1173
  1571     0770                     u610:
  1572     0770                     l1171:
  1573     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0772  0865               	movf	automaticLights@j+1,w
  1576     0773  3A80               	xorlw	128
  1577     0774  00FF               	movwf	btemp+1
  1578     0775  3080               	movlw	128
  1579     0776  027F               	subwf	btemp+1,w
  1580     0777  1D03               	skipz
  1581     0778  2F7B               	goto	u625
  1582     0779  3008               	movlw	8
  1583     077A  0264               	subwf	automaticLights@j,w
  1584     077B                     u625:
  1585     077B  1C03               	skipc
  1586     077C  2F7E               	goto	u621
  1587     077D  2F7F               	goto	u620
  1588     077E                     u621:
  1589     077E  2F22               	goto	l1165
  1590     077F                     u620:
  1591     077F                     l1173:
  1592                           
  1593                           ;main.c: 122:             for(int j = i; (j >= i - 1) && j >= 0; j--) {
  1594     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1595     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1596     0781  0869               	movf	automaticLights@i_189+1,w
  1597     0782  00E7               	movwf	automaticLights@j_193+1
  1598     0783  0868               	movf	automaticLights@i_189,w
  1599     0784  00E6               	movwf	automaticLights@j_193
  1600     0785  2FBC               	goto	l1179
  1601     0786                     l1175:
  1602                           
  1603                           ;main.c: 123:                 *led[j].port |= (1 << led[j].pin);
  1604     0786  3001               	movlw	1
  1605     0787  00F3               	movwf	??_automaticLights
  1606     0788  0866               	movf	automaticLights@j_193,w
  1607     0789  00F4               	movwf	??_automaticLights+1
  1608     078A  3001               	movlw	1
  1609     078B                     u635:
  1610     078B  1003               	clrc
  1611     078C  0DF4               	rlf	??_automaticLights+1,f
  1612     078D  3EFF               	addlw	-1
  1613     078E  1D03               	skipz
  1614     078F  2F8B               	goto	u635
  1615     0790  1003               	clrc
  1616     0791  0D74               	rlf	??_automaticLights+1,w
  1617     0792  3E22               	addlw	(low ((_led| 0+2)))& (0+255)
  1618     0793  0084               	movwf	4
  1619     0794  1383               	bcf	3,7	;select IRP bank0
  1620     0795  0A00               	incf	0,w
  1621     0796  2F99               	goto	u644
  1622     0797                     u645:
  1623     0797  1003               	clrc
  1624     0798  0DF3               	rlf	??_automaticLights,f
  1625     0799                     u644:
  1626     0799  3EFF               	addlw	-1
  1627     079A  1D03               	skipz
  1628     079B  2F97               	goto	u645
  1629     079C  0873               	movf	??_automaticLights,w
  1630     079D  00FF               	movwf	btemp+1
  1631     079E  0866               	movf	automaticLights@j_193,w
  1632     079F  00F5               	movwf	??_automaticLights+2
  1633     07A0  3001               	movlw	1
  1634     07A1                     u655:
  1635     07A1  1003               	clrc
  1636     07A2  0DF5               	rlf	??_automaticLights+2,f
  1637     07A3  3EFF               	addlw	-1
  1638     07A4  1D03               	skipz
  1639     07A5  2FA1               	goto	u655
  1640     07A6  1003               	clrc
  1641     07A7  0D75               	rlf	??_automaticLights+2,w
  1642     07A8  3E20               	addlw	(low (_led| 0))& (0+255)
  1643     07A9  0084               	movwf	4
  1644     07AA  0800               	movf	0,w
  1645     07AB  00F6               	movwf	??_automaticLights+3
  1646     07AC  0A84               	incf	4,f
  1647     07AD  0800               	movf	0,w
  1648     07AE  00F7               	movwf	??_automaticLights+4
  1649     07AF  0876               	movf	??_automaticLights+3,w
  1650     07B0  0084               	movwf	4
  1651     07B1  1783               	bsf	3,7
  1652     07B2  1C77               	btfss	??_automaticLights+4,0
  1653     07B3  1383               	bcf	3,7
  1654     07B4  087F               	movf	btemp+1,w
  1655     07B5  0480               	iorwf	0,f
  1656     07B6                     l1177:
  1657                           
  1658                           ;main.c: 124:             }
  1659     07B6  30FF               	movlw	255
  1660     07B7  07E6               	addwf	automaticLights@j_193,f
  1661     07B8  1803               	skipnc
  1662     07B9  0AE7               	incf	automaticLights@j_193+1,f
  1663     07BA  30FF               	movlw	255
  1664     07BB  07E7               	addwf	automaticLights@j_193+1,f
  1665     07BC                     l1179:
  1666     07BC  0868               	movf	automaticLights@i_189,w
  1667     07BD  3EFF               	addlw	255
  1668     07BE  00F3               	movwf	??_automaticLights
  1669     07BF  0869               	movf	automaticLights@i_189+1,w
  1670     07C0  1803               	skipnc
  1671     07C1  3E01               	addlw	1
  1672     07C2  3EFF               	addlw	255
  1673     07C3  00F4               	movwf	??_automaticLights+1
  1674     07C4  0867               	movf	automaticLights@j_193+1,w
  1675     07C5  3A80               	xorlw	128
  1676     07C6  00F5               	movwf	??_automaticLights+2
  1677     07C7  0874               	movf	??_automaticLights+1,w
  1678     07C8  3A80               	xorlw	128
  1679     07C9  0275               	subwf	??_automaticLights+2,w
  1680     07CA  1D03               	skipz
  1681     07CB  2FCE               	goto	u665
  1682     07CC  0873               	movf	??_automaticLights,w
  1683     07CD  0266               	subwf	automaticLights@j_193,w
  1684     07CE                     u665:
  1685     07CE  1C03               	skipc
  1686     07CF  2FD1               	goto	u661
  1687     07D0  2FD2               	goto	u660
  1688     07D1                     u661:
  1689     07D1  2FD8               	goto	l1183
  1690     07D2                     u660:
  1691     07D2                     l1181:
  1692     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1693     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1694     07D4  1FE7               	btfss	automaticLights@j_193+1,7
  1695     07D5  2FD7               	goto	u671
  1696     07D6  2FD8               	goto	u670
  1697     07D7                     u671:
  1698     07D7  2F86               	goto	l1175
  1699     07D8                     u670:
  1700     07D8                     l1183:
  1701                           
  1702                           ;main.c: 126:     }
  1703     07D8  3001               	movlw	1
  1704     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1705     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1706     07DB  07E8               	addwf	automaticLights@i_189,f
  1707     07DC  1803               	skipnc
  1708     07DD  0AE9               	incf	automaticLights@i_189+1,f
  1709     07DE  3000               	movlw	0
  1710     07DF  07E9               	addwf	automaticLights@i_189+1,f
  1711     07E0                     l1185:
  1712     07E0  0869               	movf	automaticLights@i_189+1,w
  1713     07E1  3A80               	xorlw	128
  1714     07E2  00FF               	movwf	btemp+1
  1715     07E3  3080               	movlw	128
  1716     07E4  027F               	subwf	btemp+1,w
  1717     07E5  1D03               	skipz
  1718     07E6  2FE9               	goto	u685
  1719     07E7  3008               	movlw	8
  1720     07E8  0268               	subwf	automaticLights@i_189,w
  1721     07E9                     u685:
  1722     07E9  1C03               	skipc
  1723     07EA  2FEC               	goto	u681
  1724     07EB  2FED               	goto	u680
  1725     07EC                     u681:
  1726     07EC  2EFD               	goto	l1159
  1727     07ED                     u680:
  1728     07ED                     l191:
  1729     07ED  0008               	return
  1730     07EE                     __end_of_automaticLights:
  1731                           
  1732                           	psect	text7
  1733     0441                     __ptext7:	
  1734 ;; *************** function _ADC_Read *****************
  1735 ;; Defined at:
  1736 ;;		line 38 in file "./analog.h"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  ANC             2    0[COMMON] int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    0[COMMON] int 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, btemp+1
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         2       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0
  1753 ;;      Totals:         3       0       0       0       0
  1754 ;;Total ram usage:        3 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_automaticLights
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763     0441                     _ADC_Read:	
  1764                           ;psect for function _ADC_Read
  1765                           
  1766     0441                     l1081:	
  1767                           ;incstack = 0
  1768                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  1769                           
  1770                           
  1771                           ;./analog.h: 38: int ADC_Read(int ANC);./analog.h: 39: {;./analog.h: 40:     if(ANC<0 ||
      +                           ANC>7)
  1772     0441  1BF1               	btfsc	ADC_Read@ANC+1,7
  1773     0442  2C44               	goto	u431
  1774     0443  2C45               	goto	u430
  1775     0444                     u431:
  1776     0444  2C52               	goto	l1085
  1777     0445                     u430:
  1778     0445                     l1083:
  1779     0445  0871               	movf	ADC_Read@ANC+1,w
  1780     0446  3A80               	xorlw	128
  1781     0447  00FF               	movwf	btemp+1
  1782     0448  3080               	movlw	128
  1783     0449  027F               	subwf	btemp+1,w
  1784     044A  1D03               	skipz
  1785     044B  2C4E               	goto	u445
  1786     044C  3008               	movlw	8
  1787     044D  0270               	subwf	ADC_Read@ANC,w
  1788     044E                     u445:
  1789     044E  1C03               	skipc
  1790     044F  2C51               	goto	u441
  1791     0450  2C52               	goto	u440
  1792     0451                     u441:
  1793     0451  2C55               	goto	l1089
  1794     0452                     u440:
  1795     0452                     l1085:
  1796                           
  1797                           ;./analog.h: 41:     { return 0;}
  1798     0452  01F0               	clrf	?_ADC_Read
  1799     0453  01F1               	clrf	?_ADC_Read+1
  1800     0454  2C7A               	goto	l125
  1801     0455                     l1089:
  1802                           
  1803                           ;./analog.h: 42:     ADCON0 &= 0b11000101;
  1804     0455  30C5               	movlw	197
  1805     0456  00FF               	movwf	btemp+1
  1806     0457  087F               	movf	btemp+1,w
  1807     0458  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0459  1303               	bcf	3,6	;RP1=0, select bank0
  1809     045A  059F               	andwf	31,f	;volatile
  1810                           
  1811                           ;./analog.h: 43:     ADCON0 |= ANC<<3;
  1812     045B  0870               	movf	ADC_Read@ANC,w	;volatile
  1813     045C  00F2               	movwf	??_ADC_Read
  1814     045D  3002               	movlw	2
  1815     045E                     u455:
  1816     045E  1003               	clrc
  1817     045F  0DF2               	rlf	??_ADC_Read,f
  1818     0460  3EFF               	addlw	-1
  1819     0461  1D03               	skipz
  1820     0462  2C5E               	goto	u455
  1821     0463  1003               	clrc
  1822     0464  0D72               	rlf	??_ADC_Read,w
  1823     0465  00FF               	movwf	btemp+1
  1824     0466  087F               	movf	btemp+1,w
  1825     0467  049F               	iorwf	31,f	;volatile
  1826     0468                     l1091:
  1827                           
  1828                           ;./analog.h: 45:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  1829     0468  3013               	movlw	19
  1830     0469  00F2               	movwf	??_ADC_Read
  1831     046A                     u777:
  1832     046A  0BF2               	decfsz	??_ADC_Read,f
  1833     046B  2C6A               	goto	u777
  1834     046C  2C6D               	nop2
  1835     046D                     l1093:
  1836                           
  1837                           ;./analog.h: 46:     GO_DONE = 1;
  1838     046D  1283               	bcf	3,5	;RP0=0, select bank0
  1839     046E  1303               	bcf	3,6	;RP1=0, select bank0
  1840     046F  151F               	bsf	31,2	;volatile
  1841     0470                     l126:	
  1842                           ;./analog.h: 47:     while(ADCON0bits.GO_DONE);
  1843                           
  1844     0470  191F               	btfsc	31,2	;volatile
  1845     0471  2C73               	goto	u461
  1846     0472  2C74               	goto	u460
  1847     0473                     u461:
  1848     0473  2C70               	goto	l126
  1849     0474                     u460:
  1850     0474                     l1095:
  1851                           
  1852                           ;./analog.h: 49:     return ((ADRESH << 8) + ADRESL);
  1853     0474  081E               	movf	30,w	;volatile
  1854     0475  00F1               	movwf	?_ADC_Read+1
  1855     0476  1683               	bsf	3,5	;RP0=1, select bank1
  1856     0477  1303               	bcf	3,6	;RP1=0, select bank1
  1857     0478  081E               	movf	30,w	;volatile
  1858     0479  00F0               	movwf	?_ADC_Read
  1859     047A                     l125:
  1860     047A  0008               	return
  1861     047B                     __end_of_ADC_Read:
  1862                           
  1863                           	psect	text8
  1864     04BB                     __ptext8:	
  1865 ;; *************** function _Lcd_Write_String *****************
  1866 ;; Defined at:
  1867 ;;		line 110 in file "./lcd.h"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  a               2    5[COMMON] PTR unsigned char 
  1870 ;;		 -> STR_4(16), STR_3(16), STR_2(17), Lcd_Write_Int@str(16), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  i               2   10[COMMON] int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         2       0       0       0       0
  1883 ;;      Locals:         2       0       0       0       0
  1884 ;;      Temps:          3       0       0       0       0
  1885 ;;      Totals:         7       0       0       0       0
  1886 ;;Total ram usage:        7 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 2
  1889 ;; This function calls:
  1890 ;;		_Lcd_Write_Char
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;;		_Lcd_Write_Int
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897     04BB                     _Lcd_Write_String:	
  1898                           ;psect for function _Lcd_Write_String
  1899                           
  1900     04BB                     l1119:	
  1901                           ;incstack = 0
  1902                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1903                           
  1904                           
  1905                           ;./lcd.h: 110: void Lcd_Write_String(char *a);./lcd.h: 111: {;./lcd.h: 112:  int i;;./lc
      +                          d.h: 113:  for(i=0;a[i]!='\0';i++)
  1906     04BB  01FA               	clrf	Lcd_Write_String@i
  1907     04BC  01FB               	clrf	Lcd_Write_String@i+1
  1908     04BD  2CE0               	goto	l1125
  1909     04BE                     l1121:
  1910                           
  1911                           ;./lcd.h: 114:     Lcd_Write_Char(a[i]);
  1912     04BE  087A               	movf	Lcd_Write_String@i,w
  1913     04BF  0775               	addwf	Lcd_Write_String@a,w
  1914     04C0  00F8               	movwf	??_Lcd_Write_String+1
  1915     04C1  0876               	movf	Lcd_Write_String@a+1,w
  1916     04C2  00F7               	movwf	??_Lcd_Write_String
  1917     04C3  1803               	skipnc
  1918     04C4  0AF7               	incf	??_Lcd_Write_String,f
  1919     04C5  1FFA               	btfss	Lcd_Write_String@i,7
  1920     04C6  2CC8               	goto	u510
  1921     04C7  03F7               	decf	??_Lcd_Write_String,f
  1922     04C8                     u510:
  1923     04C8  0877               	movf	??_Lcd_Write_String,w
  1924     04C9  00F9               	movwf	??_Lcd_Write_String+2
  1925     04CA  0879               	movf	??_Lcd_Write_String+2,w
  1926     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1927     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1928     04CD  00FF               	movwf	btemp+1
  1929     04CE  0878               	movf	??_Lcd_Write_String+1,w
  1930     04CF  0084               	movwf	4
  1931     04D0  120A  118A  2003  120A  118A  	fcall	stringtab
  1932     04D5  120A  118A  240C  120A  118A  	fcall	_Lcd_Write_Char
  1933     04DA                     l1123:
  1934     04DA  3001               	movlw	1
  1935     04DB  07FA               	addwf	Lcd_Write_String@i,f
  1936     04DC  1803               	skipnc
  1937     04DD  0AFB               	incf	Lcd_Write_String@i+1,f
  1938     04DE  3000               	movlw	0
  1939     04DF  07FB               	addwf	Lcd_Write_String@i+1,f
  1940     04E0                     l1125:
  1941     04E0  087A               	movf	Lcd_Write_String@i,w
  1942     04E1  0775               	addwf	Lcd_Write_String@a,w
  1943     04E2  00F8               	movwf	??_Lcd_Write_String+1
  1944     04E3  0876               	movf	Lcd_Write_String@a+1,w
  1945     04E4  00F7               	movwf	??_Lcd_Write_String
  1946     04E5  1803               	skipnc
  1947     04E6  0AF7               	incf	??_Lcd_Write_String,f
  1948     04E7  1FFA               	btfss	Lcd_Write_String@i,7
  1949     04E8  2CEA               	goto	u520
  1950     04E9  03F7               	decf	??_Lcd_Write_String,f
  1951     04EA                     u520:
  1952     04EA  0877               	movf	??_Lcd_Write_String,w
  1953     04EB  00F9               	movwf	??_Lcd_Write_String+2
  1954     04EC  0879               	movf	??_Lcd_Write_String+2,w
  1955     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1956     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1957     04EF  00FF               	movwf	btemp+1
  1958     04F0  0878               	movf	??_Lcd_Write_String+1,w
  1959     04F1  0084               	movwf	4
  1960     04F2  120A  118A  2003  120A  118A  	fcall	stringtab
  1961     04F7  3A00               	xorlw	0
  1962     04F8  1D03               	skipz
  1963     04F9  2CFB               	goto	u531
  1964     04FA  2CFC               	goto	u530
  1965     04FB                     u531:
  1966     04FB  2CBE               	goto	l1121
  1967     04FC                     u530:
  1968     04FC                     l101:
  1969     04FC  0008               	return
  1970     04FD                     __end_of_Lcd_Write_String:
  1971                           
  1972                           	psect	text9
  1973     040C                     __ptext9:	
  1974 ;; *************** function _Lcd_Write_Char *****************
  1975 ;; Defined at:
  1976 ;;		line 94 in file "./lcd.h"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  a               1    wreg     unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  a               1    4[COMMON] unsigned char 
  1981 ;;  y               1    3[COMMON] unsigned char 
  1982 ;;  temp            1    2[COMMON] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         3       0       0       0       0
  1994 ;;      Temps:          1       0       0       0       0
  1995 ;;      Totals:         4       0       0       0       0
  1996 ;;Total ram usage:        4 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 1
  1999 ;; This function calls:
  2000 ;;		_Lcd_Port
  2001 ;; This function is called by:
  2002 ;;		_Lcd_Write_String
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007     040C                     _Lcd_Write_Char:	
  2008                           ;psect for function _Lcd_Write_Char
  2009                           
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2013                           ;Lcd_Write_Char@a stored from wreg
  2014     040C  00F4               	movwf	Lcd_Write_Char@a
  2015     040D                     l771:
  2016                           
  2017                           ;./lcd.h: 94: void Lcd_Write_Char(char a);./lcd.h: 95: {;./lcd.h: 96:    char temp,y;;./
      +                          lcd.h: 97:    temp = a&0x0F;
  2018     040D  0874               	movf	Lcd_Write_Char@a,w
  2019     040E  390F               	andlw	15
  2020     040F  00F2               	movwf	Lcd_Write_Char@temp
  2021                           
  2022                           ;./lcd.h: 98:    y = a&0xF0;
  2023     0410  0874               	movf	Lcd_Write_Char@a,w
  2024     0411  39F0               	andlw	240
  2025     0412  00F3               	movwf	Lcd_Write_Char@y
  2026     0413                     l773:
  2027                           
  2028                           ;./lcd.h: 99:    RC6 = 1;
  2029     0413  1283               	bcf	3,5	;RP0=0, select bank0
  2030     0414  1303               	bcf	3,6	;RP1=0, select bank0
  2031     0415  1707               	bsf	7,6	;volatile
  2032     0416                     l775:
  2033                           
  2034                           ;./lcd.h: 100:    Lcd_Port(y>>4);
  2035     0416  0873               	movf	Lcd_Write_Char@y,w
  2036     0417  00F1               	movwf	??_Lcd_Write_Char
  2037     0418  3004               	movlw	4
  2038     0419                     u55:
  2039     0419  1003               	clrc
  2040     041A  0CF1               	rrf	??_Lcd_Write_Char,f
  2041     041B  3EFF               	addlw	-1
  2042     041C  1D03               	skipz
  2043     041D  2C19               	goto	u55
  2044     041E  0871               	movf	??_Lcd_Write_Char,w
  2045     041F  120A  118A  23EA  120A  118A  	fcall	_Lcd_Port
  2046     0424                     l777:
  2047                           
  2048                           ;./lcd.h: 101:    RC7 = 1;
  2049     0424  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0425  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0426  1787               	bsf	7,7	;volatile
  2052     0427                     l779:
  2053                           
  2054                           ;./lcd.h: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2055     0427  301A               	movlw	26
  2056     0428  00F1               	movwf	??_Lcd_Write_Char
  2057     0429                     u787:
  2058     0429  0BF1               	decfsz	??_Lcd_Write_Char,f
  2059     042A  2C29               	goto	u787
  2060     042B  0000               	nop
  2061     042C                     l781:
  2062                           
  2063                           ;./lcd.h: 103:    RC7 = 0;
  2064     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2065     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2066     042E  1387               	bcf	7,7	;volatile
  2067     042F                     l783:
  2068                           
  2069                           ;./lcd.h: 104:    Lcd_Port(temp);
  2070     042F  0872               	movf	Lcd_Write_Char@temp,w
  2071     0430  120A  118A  23EA  120A  118A  	fcall	_Lcd_Port
  2072     0435                     l785:
  2073                           
  2074                           ;./lcd.h: 105:    RC7 = 1;
  2075     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2076     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2077     0437  1787               	bsf	7,7	;volatile
  2078     0438                     l787:
  2079                           
  2080                           ;./lcd.h: 106:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2081     0438  301A               	movlw	26
  2082     0439  00F1               	movwf	??_Lcd_Write_Char
  2083     043A                     u797:
  2084     043A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2085     043B  2C3A               	goto	u797
  2086     043C  0000               	nop
  2087     043D                     l789:
  2088                           
  2089                           ;./lcd.h: 107:    RC7 = 0;
  2090     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2091     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2092     043F  1387               	bcf	7,7	;volatile
  2093     0440                     l95:
  2094     0440  0008               	return
  2095     0441                     __end_of_Lcd_Write_Char:
  2096                           
  2097                           	psect	text10
  2098     04FD                     __ptext10:	
  2099 ;; *************** function _Lcd_Set_Cursor *****************
  2100 ;; Defined at:
  2101 ;;		line 52 in file "./lcd.h"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  a               1    wreg     unsigned char 
  2104 ;;  b               1    4[COMMON] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  a               1    6[COMMON] unsigned char 
  2107 ;;  temp            1    9[COMMON] unsigned char 
  2108 ;;  y               1    8[COMMON] unsigned char 
  2109 ;;  z               1    7[COMMON] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         1       0       0       0       0
  2120 ;;      Locals:         4       0       0       0       0
  2121 ;;      Temps:          1       0       0       0       0
  2122 ;;      Totals:         6       0       0       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 2
  2126 ;; This function calls:
  2127 ;;		_Lcd_Cmd
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133     04FD                     _Lcd_Set_Cursor:	
  2134                           ;psect for function _Lcd_Set_Cursor
  2135                           
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2139                           ;Lcd_Set_Cursor@a stored from wreg
  2140     04FD  00F6               	movwf	Lcd_Set_Cursor@a
  2141     04FE                     l1099:
  2142                           
  2143                           ;./lcd.h: 52: void Lcd_Set_Cursor(char a, char b);./lcd.h: 53: {;./lcd.h: 54:  char temp
      +                          ,z,y;;./lcd.h: 55:  if(a == 1)
  2144     04FE  0376               	decf	Lcd_Set_Cursor@a,w
  2145     04FF  1D03               	btfss	3,2
  2146     0500  2D02               	goto	u471
  2147     0501  2D03               	goto	u470
  2148     0502                     u471:
  2149     0502  2D20               	goto	l1109
  2150     0503                     u470:
  2151     0503                     l1101:
  2152                           
  2153                           ;./lcd.h: 56:  {;./lcd.h: 57:    temp = 0x80 + b - 1;
  2154     0503  0874               	movf	Lcd_Set_Cursor@b,w
  2155     0504  3E7F               	addlw	127
  2156     0505  00F9               	movwf	Lcd_Set_Cursor@temp
  2157                           
  2158                           ;./lcd.h: 58:   z = temp>>4;
  2159     0506  0879               	movf	Lcd_Set_Cursor@temp,w
  2160     0507  00F5               	movwf	??_Lcd_Set_Cursor
  2161     0508  3004               	movlw	4
  2162     0509                     u485:
  2163     0509  1003               	clrc
  2164     050A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2165     050B  3EFF               	addlw	-1
  2166     050C  1D03               	skipz
  2167     050D  2D09               	goto	u485
  2168     050E  0875               	movf	??_Lcd_Set_Cursor,w
  2169     050F  00F7               	movwf	Lcd_Set_Cursor@z
  2170     0510                     l1103:
  2171                           
  2172                           ;./lcd.h: 59:   y = temp & 0x0F;
  2173     0510  0879               	movf	Lcd_Set_Cursor@temp,w
  2174     0511  390F               	andlw	15
  2175     0512  00F8               	movwf	Lcd_Set_Cursor@y
  2176     0513                     l1105:
  2177                           
  2178                           ;./lcd.h: 60:   Lcd_Cmd(z);
  2179     0513  0877               	movf	Lcd_Set_Cursor@z,w
  2180     0514  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2181     0519                     l1107:
  2182                           
  2183                           ;./lcd.h: 61:   Lcd_Cmd(y);
  2184     0519  0878               	movf	Lcd_Set_Cursor@y,w
  2185     051A  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2186                           
  2187                           ;./lcd.h: 62:  }
  2188     051F  2D42               	goto	l89
  2189     0520                     l1109:
  2190     0520  3002               	movlw	2
  2191     0521  0676               	xorwf	Lcd_Set_Cursor@a,w
  2192     0522  1D03               	btfss	3,2
  2193     0523  2D25               	goto	u491
  2194     0524  2D26               	goto	u490
  2195     0525                     u491:
  2196     0525  2D42               	goto	l89
  2197     0526                     u490:
  2198     0526                     l1111:
  2199                           
  2200                           ;./lcd.h: 64:  {;./lcd.h: 65:   temp = 0xC0 + b - 1;
  2201     0526  0874               	movf	Lcd_Set_Cursor@b,w
  2202     0527  3EBF               	addlw	191
  2203     0528  00F9               	movwf	Lcd_Set_Cursor@temp
  2204                           
  2205                           ;./lcd.h: 66:   z = temp>>4;
  2206     0529  0879               	movf	Lcd_Set_Cursor@temp,w
  2207     052A  00F5               	movwf	??_Lcd_Set_Cursor
  2208     052B  3004               	movlw	4
  2209     052C                     u505:
  2210     052C  1003               	clrc
  2211     052D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2212     052E  3EFF               	addlw	-1
  2213     052F  1D03               	skipz
  2214     0530  2D2C               	goto	u505
  2215     0531  0875               	movf	??_Lcd_Set_Cursor,w
  2216     0532  00F7               	movwf	Lcd_Set_Cursor@z
  2217     0533                     l1113:
  2218                           
  2219                           ;./lcd.h: 67:   y = temp & 0x0F;
  2220     0533  0879               	movf	Lcd_Set_Cursor@temp,w
  2221     0534  390F               	andlw	15
  2222     0535  00F8               	movwf	Lcd_Set_Cursor@y
  2223     0536                     l1115:
  2224                           
  2225                           ;./lcd.h: 68:   Lcd_Cmd(z);
  2226     0536  0877               	movf	Lcd_Set_Cursor@z,w
  2227     0537  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2228     053C                     l1117:
  2229                           
  2230                           ;./lcd.h: 69:   Lcd_Cmd(y);
  2231     053C  0878               	movf	Lcd_Set_Cursor@y,w
  2232     053D  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2233     0542                     l89:
  2234     0542  0008               	return
  2235     0543                     __end_of_Lcd_Set_Cursor:
  2236                           
  2237                           	psect	text11
  2238     0543                     __ptext11:	
  2239 ;; *************** function _Lcd_Init *****************
  2240 ;; Defined at:
  2241 ;;		line 73 in file "./lcd.h"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0
  2257 ;;      Temps:          2       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 2
  2262 ;; This function calls:
  2263 ;;		_Lcd_Cmd
  2264 ;;		_Lcd_Port
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270     0543                     _Lcd_Init:	
  2271                           ;psect for function _Lcd_Init
  2272                           
  2273     0543                     l831:	
  2274                           ;incstack = 0
  2275                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2276                           
  2277                           
  2278                           ;./lcd.h: 75:     TRISD = 0x00;
  2279     0543  1683               	bsf	3,5	;RP0=1, select bank1
  2280     0544  1303               	bcf	3,6	;RP1=0, select bank1
  2281     0545  0188               	clrf	8	;volatile
  2282     0546                     l833:
  2283                           
  2284                           ;./lcd.h: 77:     Lcd_Port(0x00);
  2285     0546  3000               	movlw	0
  2286     0547  120A  118A  23EA  120A  118A  	fcall	_Lcd_Port
  2287     054C                     l835:
  2288                           
  2289                           ;./lcd.h: 78:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2290     054C  3034               	movlw	52
  2291     054D  00F5               	movwf	??_Lcd_Init+1
  2292     054E  30F1               	movlw	241
  2293     054F  00F4               	movwf	??_Lcd_Init
  2294     0550                     u807:
  2295     0550  0BF4               	decfsz	??_Lcd_Init,f
  2296     0551  2D50               	goto	u807
  2297     0552  0BF5               	decfsz	??_Lcd_Init+1,f
  2298     0553  2D50               	goto	u807
  2299     0554  2D55               	nop2
  2300     0555                     l837:
  2301                           
  2302                           ;./lcd.h: 79:   Lcd_Cmd(0x03);
  2303     0555  3003               	movlw	3
  2304     0556  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2305     055B                     l839:
  2306                           
  2307                           ;./lcd.h: 80:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2308     055B  300D               	movlw	13
  2309     055C  00F5               	movwf	??_Lcd_Init+1
  2310     055D  30FB               	movlw	251
  2311     055E  00F4               	movwf	??_Lcd_Init
  2312     055F                     u817:
  2313     055F  0BF4               	decfsz	??_Lcd_Init,f
  2314     0560  2D5F               	goto	u817
  2315     0561  0BF5               	decfsz	??_Lcd_Init+1,f
  2316     0562  2D5F               	goto	u817
  2317     0563  2D64               	nop2
  2318     0564                     l841:
  2319                           
  2320                           ;./lcd.h: 81:   Lcd_Cmd(0x03);
  2321     0564  3003               	movlw	3
  2322     0565  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2323     056A                     l843:
  2324                           
  2325                           ;./lcd.h: 82:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2326     056A  301D               	movlw	29
  2327     056B  00F5               	movwf	??_Lcd_Init+1
  2328     056C  3091               	movlw	145
  2329     056D  00F4               	movwf	??_Lcd_Init
  2330     056E                     u827:
  2331     056E  0BF4               	decfsz	??_Lcd_Init,f
  2332     056F  2D6E               	goto	u827
  2333     0570  0BF5               	decfsz	??_Lcd_Init+1,f
  2334     0571  2D6E               	goto	u827
  2335     0572                     l845:
  2336                           
  2337                           ;./lcd.h: 83:   Lcd_Cmd(0x03);
  2338     0572  3003               	movlw	3
  2339     0573  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2340     0578                     l847:
  2341                           
  2342                           ;./lcd.h: 85:   Lcd_Cmd(0x02);
  2343     0578  3002               	movlw	2
  2344     0579  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2345     057E                     l849:
  2346                           
  2347                           ;./lcd.h: 86:   Lcd_Cmd(0x02);
  2348     057E  3002               	movlw	2
  2349     057F  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2350     0584                     l851:
  2351                           
  2352                           ;./lcd.h: 87:   Lcd_Cmd(0x08);
  2353     0584  3008               	movlw	8
  2354     0585  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2355     058A                     l853:
  2356                           
  2357                           ;./lcd.h: 88:   Lcd_Cmd(0x00);
  2358     058A  3000               	movlw	0
  2359     058B  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2360     0590                     l855:
  2361                           
  2362                           ;./lcd.h: 89:   Lcd_Cmd(0x0C);
  2363     0590  300C               	movlw	12
  2364     0591  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2365     0596                     l857:
  2366                           
  2367                           ;./lcd.h: 90:   Lcd_Cmd(0x00);
  2368     0596  3000               	movlw	0
  2369     0597  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2370     059C                     l859:
  2371                           
  2372                           ;./lcd.h: 91:   Lcd_Cmd(0x06);
  2373     059C  3006               	movlw	6
  2374     059D  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2375     05A2                     l92:
  2376     05A2  0008               	return
  2377     05A3                     __end_of_Lcd_Init:
  2378                           
  2379                           	psect	text12
  2380     0382                     __ptext12:	
  2381 ;; *************** function _Lcd_Clear *****************
  2382 ;; Defined at:
  2383 ;;		line 46 in file "./lcd.h"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 2
  2404 ;; This function calls:
  2405 ;;		_Lcd_Cmd
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411     0382                     _Lcd_Clear:	
  2412                           ;psect for function _Lcd_Clear
  2413                           
  2414     0382                     l809:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2417                           
  2418                           
  2419                           ;./lcd.h: 48:  Lcd_Cmd(0);
  2420     0382  3000               	movlw	0
  2421     0383  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2422                           
  2423                           ;./lcd.h: 49:  Lcd_Cmd(1);
  2424     0388  3001               	movlw	1
  2425     0389  120A  118A  23D0  120A  118A  	fcall	_Lcd_Cmd
  2426     038E                     l83:
  2427     038E  0008               	return
  2428     038F                     __end_of_Lcd_Clear:
  2429                           
  2430                           	psect	text13
  2431     03D0                     __ptext13:	
  2432 ;; *************** function _Lcd_Cmd *****************
  2433 ;; Defined at:
  2434 ;;		line 37 in file "./lcd.h"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  a               1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  a               1    3[COMMON] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, pclath, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         1       0       0       0       0
  2450 ;;      Temps:          2       0       0       0       0
  2451 ;;      Totals:         3       0       0       0       0
  2452 ;;Total ram usage:        3 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 1
  2455 ;; This function calls:
  2456 ;;		_Lcd_Port
  2457 ;; This function is called by:
  2458 ;;		_Lcd_Clear
  2459 ;;		_Lcd_Set_Cursor
  2460 ;;		_Lcd_Init
  2461 ;;		_Lcd_Shift_Right
  2462 ;;		_Lcd_Shift_Left
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     03D0                     _Lcd_Cmd:	
  2467                           ;psect for function _Lcd_Cmd
  2468                           
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2472                           ;Lcd_Cmd@a stored from wreg
  2473     03D0  00F3               	movwf	Lcd_Cmd@a
  2474     03D1                     l761:
  2475                           
  2476                           ;./lcd.h: 37: void Lcd_Cmd(char a);./lcd.h: 38: {;./lcd.h: 39:  RC6 = 0;
  2477     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2478     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2479     03D3  1307               	bcf	7,6	;volatile
  2480     03D4                     l763:
  2481                           
  2482                           ;./lcd.h: 40:  Lcd_Port(a);
  2483     03D4  0873               	movf	Lcd_Cmd@a,w
  2484     03D5  120A  118A  23EA  120A  118A  	fcall	_Lcd_Port
  2485     03DA                     l765:
  2486                           
  2487                           ;./lcd.h: 41:  RC7 = 1;
  2488     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2489     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2490     03DC  1787               	bsf	7,7	;volatile
  2491     03DD                     l767:
  2492                           
  2493                           ;./lcd.h: 42:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2494     03DD  300B               	movlw	11
  2495     03DE  00F2               	movwf	??_Lcd_Cmd+1
  2496     03DF  3062               	movlw	98
  2497     03E0  00F1               	movwf	??_Lcd_Cmd
  2498     03E1                     u837:
  2499     03E1  0BF1               	decfsz	??_Lcd_Cmd,f
  2500     03E2  2BE1               	goto	u837
  2501     03E3  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2502     03E4  2BE1               	goto	u837
  2503     03E5  0000               	nop
  2504     03E6                     l769:
  2505                           
  2506                           ;./lcd.h: 43:         RC7 = 0;
  2507     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2508     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2509     03E8  1387               	bcf	7,7	;volatile
  2510     03E9                     l80:
  2511     03E9  0008               	return
  2512     03EA                     __end_of_Lcd_Cmd:
  2513                           
  2514                           	psect	text14
  2515     03EA                     __ptext14:	
  2516 ;; *************** function _Lcd_Port *****************
  2517 ;; Defined at:
  2518 ;;		line 15 in file "./lcd.h"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  a               1    wreg     unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  a               1    0[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0
  2535 ;;      Totals:         1       0       0       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_Lcd_Cmd
  2542 ;;		_Lcd_Init
  2543 ;;		_Lcd_Write_Char
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547     03EA                     _Lcd_Port:	
  2548                           ;psect for function _Lcd_Port
  2549                           
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _Lcd_Port: [wreg]
  2553                           ;Lcd_Port@a stored from wreg
  2554     03EA  00F0               	movwf	Lcd_Port@a
  2555     03EB                     l751:
  2556                           
  2557                           ;./lcd.h: 15: void Lcd_Port(char a);./lcd.h: 16: {;./lcd.h: 17:  if(a & 1)
  2558     03EB  1C70               	btfss	Lcd_Port@a,0
  2559     03EC  2BEE               	goto	u11
  2560     03ED  2BEF               	goto	u10
  2561     03EE                     u11:
  2562     03EE  2BF3               	goto	l69
  2563     03EF                     u10:
  2564     03EF                     l753:
  2565                           
  2566                           ;./lcd.h: 18:   RD4 = 1;
  2567     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2568     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2569     03F1  1608               	bsf	8,4	;volatile
  2570     03F2  2BF6               	goto	l70
  2571     03F3                     l69:	
  2572                           ;./lcd.h: 19:  else
  2573                           
  2574                           
  2575                           ;./lcd.h: 20:   RD4 = 0;
  2576     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2577     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2578     03F5  1208               	bcf	8,4	;volatile
  2579     03F6                     l70:
  2580                           
  2581                           ;./lcd.h: 22:  if(a & 2)
  2582     03F6  1CF0               	btfss	Lcd_Port@a,1
  2583     03F7  2BF9               	goto	u21
  2584     03F8  2BFA               	goto	u20
  2585     03F9                     u21:
  2586     03F9  2BFC               	goto	l71
  2587     03FA                     u20:
  2588     03FA                     l755:
  2589                           
  2590                           ;./lcd.h: 23:   RD5 = 1;
  2591     03FA  1688               	bsf	8,5	;volatile
  2592     03FB  2BFD               	goto	l72
  2593     03FC                     l71:	
  2594                           ;./lcd.h: 24:  else
  2595                           
  2596                           
  2597                           ;./lcd.h: 25:   RD5 = 0;
  2598     03FC  1288               	bcf	8,5	;volatile
  2599     03FD                     l72:
  2600                           
  2601                           ;./lcd.h: 27:  if(a & 4)
  2602     03FD  1D70               	btfss	Lcd_Port@a,2
  2603     03FE  2C00               	goto	u31
  2604     03FF  2C01               	goto	u30
  2605     0400                     u31:
  2606     0400  2C03               	goto	l73
  2607     0401                     u30:
  2608     0401                     l757:
  2609                           
  2610                           ;./lcd.h: 28:   RD6 = 1;
  2611     0401  1708               	bsf	8,6	;volatile
  2612     0402  2C04               	goto	l74
  2613     0403                     l73:	
  2614                           ;./lcd.h: 29:  else
  2615                           
  2616                           
  2617                           ;./lcd.h: 30:   RD6 = 0;
  2618     0403  1308               	bcf	8,6	;volatile
  2619     0404                     l74:
  2620                           
  2621                           ;./lcd.h: 32:  if(a & 8)
  2622     0404  1DF0               	btfss	Lcd_Port@a,3
  2623     0405  2C07               	goto	u41
  2624     0406  2C08               	goto	u40
  2625     0407                     u41:
  2626     0407  2C0A               	goto	l75
  2627     0408                     u40:
  2628     0408                     l759:
  2629                           
  2630                           ;./lcd.h: 33:   RD7 = 1;
  2631     0408  1788               	bsf	8,7	;volatile
  2632     0409  2C0B               	goto	l77
  2633     040A                     l75:	
  2634                           ;./lcd.h: 34:  else
  2635                           
  2636                           
  2637                           ;./lcd.h: 35:   RD7 = 0;
  2638     040A  1388               	bcf	8,7	;volatile
  2639     040B                     l77:
  2640     040B  0008               	return
  2641     040C                     __end_of_Lcd_Port:
  2642                           
  2643                           	psect	text15
  2644     0379                     __ptext15:	
  2645 ;; *************** function _ADC_Init *****************
  2646 ;; Defined at:
  2647 ;;		line 15 in file "./analog.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674     0379                     _ADC_Init:	
  2675                           ;psect for function _ADC_Init
  2676                           
  2677     0379                     l869:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _ADC_Init: [wreg]
  2680                           
  2681                           
  2682                           ;./analog.h: 19:     ADCON0 = 0x41;
  2683     0379  3041               	movlw	65
  2684     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2685     037B  1303               	bcf	3,6	;RP1=0, select bank0
  2686     037C  009F               	movwf	31	;volatile
  2687                           
  2688                           ;./analog.h: 20:     ADCON1 = 0x80;
  2689     037D  3080               	movlw	128
  2690     037E  1683               	bsf	3,5	;RP0=1, select bank1
  2691     037F  1303               	bcf	3,6	;RP1=0, select bank1
  2692     0380  009F               	movwf	31	;volatile
  2693     0381                     l119:
  2694     0381  0008               	return
  2695     0382                     __end_of_ADC_Init:
  2696     007E                     btemp	set	126	;btemp
  2697     007E                     wtemp0	set	126
  2698                           
  2699                           	psect	config
  2700                           
  2701                           ;Config register CONFIG @ 0x2007
  2702                           ;	Oscillator Selection bits
  2703                           ;	FOSC = HS, HS oscillator
  2704                           ;	Watchdog Timer Enable bit
  2705                           ;	WDTE = OFF, WDT disabled
  2706                           ;	Power-up Timer Enable bit
  2707                           ;	PWRTE = OFF, PWRT disabled
  2708                           ;	Brown-out Reset Enable bit
  2709                           ;	BOREN = ON, BOR enabled
  2710                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2711                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2712                           ;	Data EEPROM Memory Code Protection bit
  2713                           ;	CPD = OFF, Data EEPROM code protection off
  2714                           ;	Flash Program Memory Write Enable bits
  2715                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2716                           ;	In-Circuit Debugger Mode bit
  2717                           ;	DEBUG = 0x1, unprogrammed default
  2718                           ;	Flash Program Memory Code Protection bit
  2719                           ;	CP = OFF, Code protection off
  2720     2007                     	org	8199
  2721     2007  3F7A               	dw	16250

Data Sizes:
    Strings     52
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> Lcd_Write_Int@str(BANK0[16]), STR_2(CODE[17]), STR_3(CODE[16]), STR_4(CODE[16]), 

    led$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTE(SFR0[1]), 

    s$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTE(SFR0[1]), 

    S101_Pin$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTE(SFR0[1]), 

    S639$buffer	PTR unsigned char  size(1) Largest target is 0

    S639$source	PTR const unsigned char  size(1) Largest target is 0

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMMON[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _automaticLights->_ADC_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_automaticLights

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2342
                                             12 COMMON     1     1      0
                                             10 BANK0      3     3      0
                           _ADC_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                    _automaticLights
                       _manualLights
                           _rx_ready
                             _rx_val
                            _ser_int
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx_val                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx_ready                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _manualLights                                         9     7      2     310
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _automaticLights                                     15    15      0     569
                                              3 COMMON     5     5      0
                                              0 BANK0     10    10      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             3     1      2     142
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     514
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     573
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _automaticLights
     _ADC_Read
   _manualLights
   _rx_ready
   _rx_val
   _ser_int
   _usart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jan 19 00:25:34 2024

                       _s 0040                         pc 0002                        l70 03F6  
                      l71 03FC                        l72 03FD                        l80 03E9  
                      l73 0403                        l74 0404                        l75 040A  
                      l83 038E                        l92 05A2                        l77 040B  
                      l69 03F3                        l95 0440                        l89 0542  
                      u10 03EF                        u11 03EE                        u20 03FA  
                      u21 03F9                        u30 0401                        u31 0400  
                      u40 0408                        u41 0407                        u55 0419  
                      fsr 0004          ?_automaticLights 0070                       l101 04FC  
                     l200 0605                       l131 039C                       l125 047A  
                     l126 0470                       l119 0381                       l135 03AB  
                     l154 0378                       l139 03BC                       l191 07ED  
                     l751 03EB                       l831 0543                       l753 03EF  
                     l761 03D1                       l809 0382                       l841 0564  
                     l833 0546                       l755 03FA                       l763 03D4  
                     l851 0584                       l843 056A                       l835 054C  
                     l771 040D                       l757 0401                       l765 03DA  
                     l853 058A                       l845 0572                       l837 0555  
                     l781 042C                       l773 0413                       l759 0408  
                     l767 03DD                       l855 0590                       l847 0578  
                     l839 055B                       l783 042F                       l775 0416  
                     l871 038F                       l769 03E6                       l857 0596  
                     l849 057E                       l785 0435                       l777 0424  
                     l859 059C                       l787 0438                       l779 0427  
                     l891 0375                       l869 0379                       l789 043D  
                     l887 03AC                       l889 03B8                       _RC0 0038  
                     _RD4 0044                       _RC6 003E                       _RD5 0045  
                     _RC7 003F                       _RD6 0046                       _RD7 0047  
                     u170 0399                       u171 0395                       u510 04C8  
                     u430 0445                       u431 0444                       u520 04EA  
                     u440 0452                       u184 039C                       u505 052C  
                     u441 0451                       u530 04FC                       u610 0770  
                     u531 04FB                       u611 076F                       u460 0474  
                     u620 077F                       u540 03A3                       u461 0473  
                     u445 044E                       u621 077E                       u605 073F  
                     u541 03A2                       u470 0503                       u710 05D7  
                     u471 0502                       u455 045E                       u615 076C  
                     u711 05D6                       u560 06F9                       u625 077B  
                     u561 06F8                       u705 05AE                       u490 0526  
                     u570 071B                       u730 0605                       u491 0525  
                     u635 078B                       u571 071A                       u555 06D1  
                     u731 0604                       u715 05D3                       u660 07D2  
                     u644 0799                       u740 066C                       u485 0509  
                     u661 07D1                       u645 0797                       u565 06F5  
                     u725 05DD                       u741 066B                       u670 07D8  
                     u807 0550                       u671 07D7                       u655 07A1  
                     u575 0717                       u735 0601                       u680 07ED  
                     u817 055F                       u681 07EC                       u665 07CE  
                     u585 0729                       u594 0737                       u690 05A9  
                     u827 056E                       u595 0735                       u691 05A8  
                     u837 03E1                       u685 07E9                       u757 0649  
                     u767 06BF                       u777 046A                       u787 0429  
                     u797 043A                       _led 0020                       fsr0 0004  
                     indf 0000               main@blu_val 007C                      l1101 0503  
                    l1111 0526                      l1103 0510                      l1113 0533  
                    l1105 0513                      l1121 04BE                      l1201 05D8  
                    l1115 0536                      l1107 0519                      l1123 04DA  
                    l1211 05F8                      l1131 03A4                      l1117 053C  
                    l1109 0520                      l1125 04E0                      l1141 06C8  
                    l1221 060A                      l1119 04BB                      l1151 06EC  
                    l1207 05DA                      l1127 039D                      l1311 06AE  
                    l1231 061F                      l1223 060B                      l1081 0441  
                    l1161 070E                      l1153 06F9                      l1209 05F2  
                    l1129 03A3                      l1137 03A9                      l1241 0650  
                    l1233 0627                      l1225 0610                      l1217 0606  
                    l1091 0468                      l1083 0445                      l1171 0770  
                    l1163 071B                      l1147 06CC                      l1251 065E  
                    l1243 0655                      l1235 0630                      l1227 0615  
                    l1219 0609                      l1093 046D                      l1085 0452  
                    l1181 07D2                      l1173 077F                      l1165 0722  
                    l1149 06E6                      l1261 0679                      l1253 065F  
                    l1245 0659                      l1237 0638                      l1229 061A  
                    l1095 0474                      l1175 0786                      l1167 0754  
                    l1183 07D8                      l1159 06FD                      l1263 0683  
                    l1271 06A4                      l1255 0661                      l1247 065A  
                    l1239 0641                      l1089 0455                      l1185 07E0  
                    l1177 07B6                      l1169 075A                      l1265 068C  
                    l1273 06B9                      l1257 066C                      l1249 065B  
                    l1099 04FE                      l1179 07BC                      l1195 05AB  
                    l1187 05A3                      l1267 0694                      l1259 0673  
                    l1197 05C4                      l1189 05A9                      l1269 069D  
                    l1199 05CA                      STR_1 0044                      STR_2 0013  
                    STR_3 0034                      STR_4 0024                      _RCIF 0065  
                    _TXIF 0064         ?_Lcd_Write_String 0075                      _main 0606  
                    btemp 007E          __end_of_ADC_Init 0382          __end_of_ADC_Read 047B  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 03EA  
                   ?_main 0070                     _RCREG 001A                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTE 0009         manualLights@i_197 0077                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
                   _TXSTA 0098         manualLights@state 0070           __end_of_ser_int 03BD  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 05A3          __end_of_Lcd_Port 040C           __initialization 07EE  
           ?_manualLights 0070              __end_of_main 06C8                    ??_main 006A  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                 ??_Lcd_Cmd 0071                    _TRISC0 0438  
                  _TRISC6 043E                    _TRISC7 043F            ??_manualLights 0072  
                  _rx_val 0375                 ?_ADC_Init 0070                 ?_ADC_Read 0070  
        automaticLights@i 0062          automaticLights@j 0064                 ??_ser_int 0070  
        __end_of_rx_ready 03AC           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 038F            __pcstackCOMMON 0070              __pidataBANK0 047B  
          _Lcd_Set_Cursor 04FD                ??_ADC_Init 0070                ??_ADC_Read 0072  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                __pmaintext 0606  
  __end_of_Lcd_Set_Cursor 0543                   ?_rx_val 0070                   _GO_DONE 00FA  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070      __end_of_manualLights 0606  
              __stringtab 0003            _Lcd_Write_Char 040C                   _Lcd_Cmd 03D0  
               ?_rx_ready 0070           ?_Lcd_Set_Cursor 0074                   __ptext1 038F  
                 __ptext2 03AC                   __ptext3 0375                   __ptext4 039D  
                 __ptext5 05A3                   __ptext6 06C8                   __ptext7 0441  
                 __ptext8 04BB                   __ptext9 040C                   _ser_int 03AC  
  __end_of_Lcd_Write_Char 0441      end_of_initialization 07FC                 Lcd_Port@a 0070  
              ??_rx_ready 0072           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A         ??_automaticLights 0073                _usart_init 038F  
               _Lcd_Clear 0382          _Lcd_Write_String 04BB            __end_of_rx_val 0379  
     start_initialization 07EE                ?_Lcd_Clear 0070              _manualLights 05A3  
              init_fetch0 03BD               __pdataBANK0 0020           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                  ??_rx_val 0070                 ___latbits 0002  
           __pcstackBANK0 0060                  ?_Lcd_Cmd 0070               ?_usart_init 0070  
        ??_Lcd_Set_Cursor 0075      automaticLights@i_189 0068      automaticLights@j_193 0066  
               __pstrings 0003             manualLights@i 0075                  _ADC_Init 0379  
                _ADC_Read 0441               ADC_Read@ANC 0070                  ?_ser_int 0070  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074                _ADCON0bits 001F  
             __stringbase 0012          ??_Lcd_Write_Char 0071           _automaticLights 06C8  
                _Lcd_Init 0543                  _Lcd_Port 03EA  __end_of_Lcd_Write_String 04FD  
      __end_of__stringtab 0013                  __ptext10 04FD                  __ptext11 0543  
                __ptext12 0382                  __ptext13 03D0                  __ptext14 03EA  
                __ptext15 0379                  _rx_ready 039D   __end_of_automaticLights 07EE  
                init_ram0 03C1        Lcd_Write_Char@temp 0072        automaticLights@val 0060  
            ??_usart_init 0070                 stringcode 000D        Lcd_Set_Cursor@temp 0079  
                stringdir 000D                  stringtab 0003        __end_of_usart_init 039D  
